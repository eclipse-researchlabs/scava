<?xml version="1.0" encoding="ASCII"?>
<restmule:API xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:restmule="restmule" name="StackExchange" title="StackExchange" apiVersion="2.0" apiHost="https://api.stackexchange.com">
  <endpoints path="/search/advanced">
    <requests description="null" scope="//@ratePolicy/@scopes.1">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|relevance)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="accepted" label="accepted" description="null" pattern="(true|false)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="answers" label="answers" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="body" label="body" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="closed" label="closed" description="null" pattern="(true|false)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="migrated" label="migrated" description="null" pattern="(true|false)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="notice" label="notice" description="null" pattern="(true|false)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="nottagged" label="nottagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="q" label="q" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="title" label="title" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="url" label="url" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="user" label="user" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="views" label="views" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="wiki" label="wiki" description="null" pattern="(true|false)"/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/reputation">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="ReputationChanges" label="reputation_changes" description="null">
          <elements xsi:type="restmule:ObjectType" name="ReputationChanges" label="reputation_changes" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="voteType" label="vote_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChange" label="reputation_change" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(popular|activity|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tags}/synonyms">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|applied|activity)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TagSynonyms" label="tag_synonyms" description="null">
          <elements xsi:type="restmule:ObjectType" name="TagSynonyms" label="tag_synonyms" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="fromTag" label="from_tag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastAppliedDate" label="last_applied_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="toTag" label="to_tag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="appliedCount" label="applied_count" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(reputation|creation|name|modified)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ObjectType" name="User" label="user" description="null" required="true">
          <attributes xsi:type="restmule:TInteger" name="reputationChangeQuarter" label="reputation_change_quarter" description="null"/>
          <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="lastModifiedDate" label="last_modified_date" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
          <attributes xsi:type="restmule:TString" name="aboutMe" label="about_me" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="reputationChangeYear" label="reputation_change_year" description="null"/>
          <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
          <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="reputationChangeDay" label="reputation_change_day" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="reputationChangeMonth" label="reputation_change_month" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
          <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
          <attributes xsi:type="restmule:TBoolean" name="isEmployee" label="is_employee" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
          <attributes xsi:type="restmule:TString" name="websiteUrl" label="website_url" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="reputationChangeWeek" label="reputation_change_week" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="timedPenaltyDate" label="timed_penalty_date" description="null"/>
          <attributes xsi:type="restmule:TString" name="location" label="location" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="age" label="age" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
          <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
          </nestedObjects>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/questions/unaccepted">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/associated">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="NetworkUsers" label="network_users" description="null">
          <elements xsi:type="restmule:ObjectType" name="NetworkUsers" label="network_users" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteName" label="site_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
            </nestedObjects>
            <listFields name="TopQuestions" label="top_questions" description="null">
              <elements xsi:type="restmule:UndefinedType" name="topQuestions" label="top_questions" description="null"/>
            </listFields>
            <listFields name="TopAnswers" label="top_answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="topAnswers" label="top_answers" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/inbox">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="InboxItems" label="inbox_items" description="null">
          <elements xsi:type="restmule:ObjectType" name="InboxItems" label="inbox_items" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="itemType" label="item_type" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/inbox/unread">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="since" label="since" description="Unix date."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="InboxItems" label="inbox_items" description="null">
          <elements xsi:type="restmule:ObjectType" name="InboxItems" label="inbox_items" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="itemType" label="item_type" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/questions/featured">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/privileges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Privileges" label="privileges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Privileges" label="privileges" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="shortDescription" label="short_description" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/posts/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Posts" label="posts" description="null">
          <elements xsi:type="restmule:ObjectType" name="Posts" label="posts" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/questions/unanswered">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/badges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(rank|name|type)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/reputation-history/full">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="ReputationHistory" label="reputation_history" description="null">
          <elements xsi:type="restmule:ObjectType" name="ReputationHistory" label="reputation_history" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="reputationHistoryType" label="reputation_history_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChange" label="reputation_change" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tags}/info">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(popular|activity|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/suggested-edits">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|approval|rejection)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="SuggestedEdits" label="suggested-edits" description="null">
          <elements xsi:type="restmule:ObjectType" name="SuggestedEdits" label="suggested-edits" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="rejectionDate" label="rejection_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="approvalDate" label="approval_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <nestedObjects name="ProposingUser" label="proposing_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/reputation-history">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="ReputationHistory" label="reputation_history" description="null">
          <elements xsi:type="restmule:ObjectType" name="ReputationHistory" label="reputation_history" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="reputationHistoryType" label="reputation_history_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChange" label="reputation_change" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/suggested-edits">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|approval|rejection)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="SuggestedEdits" label="suggested-edits" description="null">
          <elements xsi:type="restmule:ObjectType" name="SuggestedEdits" label="suggested-edits" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="rejectionDate" label="rejection_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="approvalDate" label="approval_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <nestedObjects name="ProposingUser" label="proposing_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/top-question-tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TopTagObjects" label="top_tag_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="TopTagObjects" label="top_tag_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="tagName" label="tag_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionScore" label="question_score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerScore" label="answer_score" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/featured">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/privileges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Privileges" label="privileges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Privileges" label="privileges" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="shortDescription" label="short_description" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/comments/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/badges/tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = rank => string&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = rank => string&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(rank|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/tags/{tags}/top-answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/mentioned">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/merges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="AccountMerge" label="account_merge" description="null">
          <elements xsi:type="restmule:ObjectType" name="AccountMerge" label="account_merge" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="newAccountId" label="new_account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="oldAccountId" label="old_account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="mergeDate" label="merge_date" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/badges/{ids}/recipients">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/errors">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Errors" label="errors" description="null">
          <elements xsi:type="restmule:ObjectType" name="Errors" label="errors" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="errorName" label="error_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="errorId" label="error_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/badges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(rank|name|type)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/comments/{id}/delete"/>
  <endpoints path="/events">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="since" label="since" description="Unix date."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Events" label="events" description="null">
          <elements xsi:type="restmule:ObjectType" name="Events" label="events" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="eventType" label="event_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="theIdOfTheObjectAnswerCommentQuestionOrUserTheEventDescribes" label="the id of the object (answer, comment, question, or user) the event describes" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="excerpt" label="excerpt" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/filters/create">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="base" label="base" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="exclude" label="exclude" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="include" label="include" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TBoolean" name="unsafe" label="unsafe" description="null"/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ObjectType" name="SingleFilter" label="single_filter" description="null" required="true">
          <attributes xsi:type="restmule:TString" name="filter" label="filter" description="null"/>
          <attributes xsi:type="restmule:TString" name="filterType" label="filter_type" description="null"/>
          <listFields name="IncludedFields" label="included_fields" description="null">
            <elements xsi:type="restmule:UndefinedType" name="includedFields" label="included_fields" description="null"/>
          </listFields>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/moderators">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(reputation|creation|name|modified)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Users" label="users" description="null">
          <elements xsi:type="restmule:ObjectType" name="Users" label="users" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="reputationChangeQuarter" label="reputation_change_quarter" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastModifiedDate" label="last_modified_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="aboutMe" label="about_me" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeYear" label="reputation_change_year" description="null"/>
            <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
            <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeDay" label="reputation_change_day" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeMonth" label="reputation_change_month" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isEmployee" label="is_employee" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="websiteUrl" label="website_url" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeWeek" label="reputation_change_week" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="timedPenaltyDate" label="timed_penalty_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="location" label="location" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="age" label="age" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/inbox/unread">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="since" label="since" description="Unix date."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="InboxItems" label="inbox_items" description="null">
          <elements xsi:type="restmule:ObjectType" name="InboxItems" label="inbox_items" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="itemType" label="item_type" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/merges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="AccountMerge" label="account_merge" description="null">
          <elements xsi:type="restmule:ObjectType" name="AccountMerge" label="account_merge" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="newAccountId" label="new_account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="oldAccountId" label="old_account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="mergeDate" label="merge_date" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/write-permissions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="WritePermissions" label="write_permissions" description="null">
          <elements xsi:type="restmule:ObjectType" name="WritePermissions" label="write_permissions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="minSecondsBetweenActions" label="min_seconds_between_actions" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="maxDailyActions" label="max_daily_actions" description="null"/>
            <attributes xsi:type="restmule:TString" name="objectType" label="object_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canDelete" label="can_delete" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canEdit" label="can_edit" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canAdd" label="can_add" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/comments/{toId}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="toId" label="toId" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/top-answer-tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TopTagObjects" label="top_tag_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="TopTagObjects" label="top_tag_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="tagName" label="tag_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionScore" label="question_score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerScore" label="answer_score" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/top-answer-tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TopTagObjects" label="top_tag_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="TopTagObjects" label="top_tag_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="tagName" label="tag_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionScore" label="question_score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerScore" label="answer_score" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/questions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/badges/name">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = rank => string&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = rank => string&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(rank|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/posts/{ids}/revisions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Revisions" label="revisions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Revisions" label="revisions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="revisionNumber" label="revision_number" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="revisionGuid" label="revision_guid" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isRollback" label="is_rollback" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TString" name="revisionType" label="revision_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="lastBody" label="last_body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="lastTitle" label="last_title" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="setCommunityWiki" label="set_community_wiki" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="LastTags" label="last_tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="lastTags" label="last_tags" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/posts/{id}/comments/add"/>
  <endpoints path="/me/tags/{tags}/top-questions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|hot|week|month|relevance)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/comments/{id}/edit"/>
  <endpoints path="/me/comments">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/questions/no-answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/notifications/unread">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Notifications" label="notifications" description="null">
          <elements xsi:type="restmule:ObjectType" name="Notifications" label="notifications" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="notificationType" label="notification_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/questions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/reputation-history/full">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="ReputationHistory" label="reputation_history" description="null">
          <elements xsi:type="restmule:ObjectType" name="ReputationHistory" label="reputation_history" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="reputationHistoryType" label="reputation_history_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChange" label="reputation_change" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/write-permissions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="WritePermissions" label="write_permissions" description="null">
          <elements xsi:type="restmule:ObjectType" name="WritePermissions" label="write_permissions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="minSecondsBetweenActions" label="min_seconds_between_actions" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="maxDailyActions" label="max_daily_actions" description="null"/>
            <attributes xsi:type="restmule:TString" name="objectType" label="object_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canDelete" label="can_delete" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canEdit" label="can_edit" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canAdd" label="can_add" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/tags/{tags}/top-answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/{ids}/related">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|rank)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/mentioned">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/answers/{ids}/comments">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/moderator-only">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(popular|activity|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/comments">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/questions/unanswered">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/access-tokens/{accessTokens}/invalidate">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="accessTokens" label="accessTokens" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="AccessTokens" label="access_tokens" description="null">
          <elements xsi:type="restmule:ObjectType" name="AccessTokens" label="access_tokens" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="accessToken" label="access_token" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="expiresOnDate" label="expires_on_date" description="null"/>
            <listFields name="Scope" label="scope" description="null">
              <elements xsi:type="restmule:UndefinedType" name="scope" label="scope" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tags}/related">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(popular|activity|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/{ids}/comments">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/favorites">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|added)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/access-tokens/{accessTokens}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="accessTokens" label="accessTokens" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="AccessTokens" label="access_tokens" description="null">
          <elements xsi:type="restmule:ObjectType" name="AccessTokens" label="access_tokens" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="accessToken" label="access_token" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="expiresOnDate" label="expires_on_date" description="null"/>
            <listFields name="Scope" label="scope" description="null">
              <elements xsi:type="restmule:UndefinedType" name="scope" label="scope" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/questions/unaccepted">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/sites">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Sites" label="sites" description="null">
          <elements xsi:type="restmule:ObjectType" name="Sites" label="sites" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
            <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
            <nestedObjects name="Styling" label="styling" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
              <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
              <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
            </nestedObjects>
            <listFields name="Aliases" label="aliases" description="null">
              <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
            </listFields>
            <listFields name="RelatedSites" label="related_sites" description="null">
              <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
            </listFields>
            <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
              <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/timeline">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="UserTimelineObjects" label="user_timeline_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="UserTimelineObjects" label="user_timeline_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="detail" label="detail" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="timelineType" label="timeline_type" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/reputation-history">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="ReputationHistory" label="reputation_history" description="null">
          <elements xsi:type="restmule:ObjectType" name="ReputationHistory" label="reputation_history" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="reputationHistoryType" label="reputation_history_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChange" label="reputation_change" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/notifications">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Notifications" label="notifications" description="null">
          <elements xsi:type="restmule:ObjectType" name="Notifications" label="notifications" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="notificationType" label="notification_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/comments">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/inbox">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="InboxItems" label="inbox_items" description="null">
          <elements xsi:type="restmule:ObjectType" name="InboxItems" label="inbox_items" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="itemType" label="item_type" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/badges/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(rank|name|type)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/required">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(popular|activity|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/suggested-edits/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|approval|rejection)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="SuggestedEdits" label="suggested-edits" description="null">
          <elements xsi:type="restmule:ObjectType" name="SuggestedEdits" label="suggested-edits" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="rejectionDate" label="rejection_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="approvalDate" label="approval_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <nestedObjects name="ProposingUser" label="proposing_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/apps/{accessTokens}/de-authenticate">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="accessTokens" label="accessTokens" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="AccessTokens" label="access_tokens" description="null">
          <elements xsi:type="restmule:ObjectType" name="AccessTokens" label="access_tokens" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="accessToken" label="access_token" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="expiresOnDate" label="expires_on_date" description="null"/>
            <listFields name="Scope" label="scope" description="null">
              <elements xsi:type="restmule:UndefinedType" name="scope" label="scope" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/posts">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Posts" label="posts" description="null">
          <elements xsi:type="restmule:ObjectType" name="Posts" label="posts" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/notifications">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Notifications" label="notifications" description="null">
          <elements xsi:type="restmule:ObjectType" name="Notifications" label="notifications" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="notificationType" label="notification_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(reputation|creation|name|modified)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Users" label="users" description="null">
          <elements xsi:type="restmule:ObjectType" name="Users" label="users" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="reputationChangeQuarter" label="reputation_change_quarter" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastModifiedDate" label="last_modified_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="aboutMe" label="about_me" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeYear" label="reputation_change_year" description="null"/>
            <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
            <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeDay" label="reputation_change_day" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeMonth" label="reputation_change_month" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isEmployee" label="is_employee" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="websiteUrl" label="website_url" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeWeek" label="reputation_change_week" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="timedPenaltyDate" label="timed_penalty_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="location" label="location" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="age" label="age" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/inbox">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="InboxItems" label="inbox_items" description="null">
          <elements xsi:type="restmule:ObjectType" name="InboxItems" label="inbox_items" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="itemType" label="item_type" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/info">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ObjectType" name="InfoObject" label="info_object" description="null" required="true">
          <attributes xsi:type="restmule:TFloat" name="answersPerMinute" label="answers_per_minute" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalComments" label="total_comments" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalBadges" label="total_badges" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalAccepted" label="total_accepted" description="null"/>
          <attributes xsi:type="restmule:TFloat" name="badgesPerMinute" label="badges_per_minute" description="null"/>
          <attributes xsi:type="restmule:TFloat" name="questionsPerMinute" label="questions_per_minute" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalUnanswered" label="total_unanswered" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalVotes" label="total_votes" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalQuestions" label="total_questions" description="null"/>
          <attributes xsi:type="restmule:TString" name="apiRevision" label="api_revision" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="newActiveUsers" label="new_active_users" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalAnswers" label="total_answers" description="null"/>
          <attributes xsi:type="restmule:TInteger" name="totalUsers" label="total_users" description="null"/>
          <nestedObjects name="Site" label="site" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
            <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
            <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
            <nestedObjects name="Styling" label="styling" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
              <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
              <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
            </nestedObjects>
            <listFields name="Aliases" label="aliases" description="null">
              <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
            </listFields>
            <listFields name="RelatedSites" label="related_sites" description="null">
              <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
            </listFields>
            <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
              <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
            </listFields>
          </nestedObjects>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tag}/top-answerers/{period}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TString" name="tag" label="tag" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TFormattedString" name="period" label="period" description="null" pattern="(all_time|month)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TagScoreObjects" label="tag_score_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="TagScoreObjects" label="tag_score_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postCount" label="post_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/reputation">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="ReputationChanges" label="reputation_changes" description="null">
          <elements xsi:type="restmule:ObjectType" name="ReputationChanges" label="reputation_changes" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="voteType" label="vote_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChange" label="reputation_change" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tags}/faq">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/badges/recipients">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = popular => number&#xA;sort = activity => date&#xA;sort = name => string"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(popular|activity|name)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Tags" label="tags" description="null">
          <elements xsi:type="restmule:ObjectType" name="Tags" label="tags" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="isRequired" label="is_required" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="count" label="count" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="hasSynonyms" label="has_synonyms" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isModeratorOnly" label="is_moderator_only" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <listFields name="Synonyms" label="synonyms" description="null">
              <elements xsi:type="restmule:UndefinedType" name="synonyms" label="synonyms" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/search">
    <requests description="null" scope="//@ratePolicy/@scopes.1">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|relevance)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="intitle" label="intitle" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="nottagged" label="nottagged" description="String list (semicolon delimited)."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/privileges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Privileges" label="privileges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Privileges" label="privileges" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="shortDescription" label="short_description" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tag}/top-askers/{period}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TString" name="tag" label="tag" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TFormattedString" name="period" label="period" description="null" pattern="(all_time|month)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TagScoreObjects" label="tag_score_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="TagScoreObjects" label="tag_score_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postCount" label="post_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/suggested-edits">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|approval|rejection)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="SuggestedEdits" label="suggested-edits" description="null">
          <elements xsi:type="restmule:ObjectType" name="SuggestedEdits" label="suggested-edits" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="rejectionDate" label="rejection_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="approvalDate" label="approval_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <nestedObjects name="ProposingUser" label="proposing_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/questions/featured">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/me/favorites">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = added => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|added)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/inbox/unread">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="since" label="since" description="Unix date."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="InboxItems" label="inbox_items" description="null">
          <elements xsi:type="restmule:ObjectType" name="InboxItems" label="inbox_items" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="itemType" label="item_type" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/{ids}/answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/badges">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string&#xA;sort = awarded => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string&#xA;sort = awarded => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string&#xA;sort = awarded => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = rank => string&#xA;sort = name => string&#xA;sort = type => string&#xA;sort = awarded => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(rank|name|type|awarded)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Badges" label="badges" description="null">
          <elements xsi:type="restmule:ObjectType" name="Badges" label="badges" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
            <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
            <attributes xsi:type="restmule:TString" name="rank" label="rank" description="null"/>
            <attributes xsi:type="restmule:TString" name="badgeType" label="badge_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardCount" label="award_count" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/answers/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Answers" label="answers" description="null">
          <elements xsi:type="restmule:ObjectType" name="Answers" label="answers" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerId" label="answer_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="awardedBountyAmount" label="awarded_bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAccepted" label="is_accepted" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="accepted" label="accepted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="AwardedBountyUsers" label="awarded_bounty_users" description="null">
              <elements xsi:type="restmule:UndefinedType" name="awardedBountyUsers" label="awarded_bounty_users" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/filters/{filters}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="filters" label="filters" description="String list (semicolon delimited)."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Filters" label="filters" description="null">
          <elements xsi:type="restmule:ObjectType" name="Filters" label="filters" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="filter" label="filter" description="null"/>
            <attributes xsi:type="restmule:TString" name="filterType" label="filter_type" description="null"/>
            <listFields name="IncludedFields" label="included_fields" description="null">
              <elements xsi:type="restmule:UndefinedType" name="includedFields" label="included_fields" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = hot => none&#xA;sort = week => none&#xA;sort = month => none&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|hot|week|month|relevance)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/posts/{ids}/suggested-edits">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = approval => date&#xA;sort = rejection => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|approval|rejection)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="SuggestedEdits" label="suggested-edits" description="null">
          <elements xsi:type="restmule:ObjectType" name="SuggestedEdits" label="suggested-edits" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="rejectionDate" label="rejection_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="approvalDate" label="approval_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <nestedObjects name="ProposingUser" label="proposing_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/moderators/elected">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(reputation|creation|name|modified)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Users" label="users" description="null">
          <elements xsi:type="restmule:ObjectType" name="Users" label="users" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="reputationChangeQuarter" label="reputation_change_quarter" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastModifiedDate" label="last_modified_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="aboutMe" label="about_me" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeYear" label="reputation_change_year" description="null"/>
            <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
            <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeDay" label="reputation_change_day" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeMonth" label="reputation_change_month" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isEmployee" label="is_employee" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="websiteUrl" label="website_url" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeWeek" label="reputation_change_week" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="timedPenaltyDate" label="timed_penalty_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="location" label="location" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="age" label="age" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/revisions/{ids}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Guid list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Guid list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Revisions" label="revisions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Revisions" label="revisions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="revisionNumber" label="revision_number" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="revisionGuid" label="revision_guid" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isRollback" label="is_rollback" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TString" name="revisionType" label="revision_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="lastBody" label="last_body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="comment" label="comment" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="lastTitle" label="last_title" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="setCommunityWiki" label="set_community_wiki" description="null"/>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="LastTags" label="last_tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="lastTags" label="last_tags" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/{ids}/linked">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = rank => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|rank)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/errors/{id}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ObjectType" name="Error" label="error" description="null" required="true">
          <attributes xsi:type="restmule:TString" name="errorMessage" label="error_message" description="null"/>
          <attributes xsi:type="restmule:TString" name="errorName" label="error_name" description="null"/>
          <attributes xsi:type="restmule:TFloat" name="errorId" label="error_id" description="null"/>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/posts/{ids}/comments">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/synonyms">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = applied => number&#xA;sort = activity => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|applied|activity)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TagSynonyms" label="tag_synonyms" description="null">
          <elements xsi:type="restmule:ObjectType" name="TagSynonyms" label="tag_synonyms" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="fromTag" label="from_tag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastAppliedDate" label="last_applied_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="toTag" label="to_tag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="appliedCount" label="applied_count" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/notifications/unread">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Notifications" label="notifications" description="null">
          <elements xsi:type="restmule:ObjectType" name="Notifications" label="notifications" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="notificationType" label="notification_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/comments/{toid}">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="toid" label="toid" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Comments" label="comments" description="null">
          <elements xsi:type="restmule:ObjectType" name="Comments" label="comments" description="null" required="true">
            <attributes xsi:type="restmule:TBoolean" name="edited" label="edited" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="ReplyToUser" label="reply_to_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/tags/{tags}/wikis">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TagWikis" label="tag_wikis" description="null">
          <elements xsi:type="restmule:ObjectType" name="TagWikis" label="tag_wikis" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="tagName" label="tag_name" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="excerpt" label="excerpt" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="excerptLastEditDate" label="excerpt_last_edit_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bodyLastEditDate" label="body_last_edit_date" description="null"/>
            <nestedObjects name="LastBodyEditor" label="last_body_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastExcerptEditor" label="last_excerpt_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="inname" label="inname" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = reputation => number&#xA;sort = creation => date&#xA;sort = name => string&#xA;sort = modified => date"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(reputation|creation|name|modified)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Users" label="users" description="null">
          <elements xsi:type="restmule:ObjectType" name="Users" label="users" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="reputationChangeQuarter" label="reputation_change_quarter" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastModifiedDate" label="last_modified_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="aboutMe" label="about_me" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeYear" label="reputation_change_year" description="null"/>
            <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
            <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeDay" label="reputation_change_day" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeMonth" label="reputation_change_month" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isEmployee" label="is_employee" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="websiteUrl" label="website_url" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputationChangeWeek" label="reputation_change_week" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="timedPenaltyDate" label="timed_penalty_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="location" label="location" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="age" label="age" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/timeline">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="UserTimelineObjects" label="user_timeline_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="UserTimelineObjects" label="user_timeline_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="badgeId" label="badge_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TString" name="postType" label="post_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="detail" label="detail" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="suggestedEditId" label="suggested_edit_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="timelineType" label="timeline_type" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/{ids}/timeline">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="QuestionTimelineEvents" label="question_timeline_events" description="null">
          <elements xsi:type="restmule:ObjectType" name="QuestionTimelineEvents" label="question_timeline_events" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="revisionGuid" label="revision_guid" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="commentId" label="comment_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="timelineType" label="timeline_type" description="null"/>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="User" label="user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/associated">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="NetworkUsers" label="network_users" description="null">
          <elements xsi:type="restmule:ObjectType" name="NetworkUsers" label="network_users" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="lastAccessDate" label="last_access_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteName" label="site_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="accountId" label="account_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
            <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
            </nestedObjects>
            <listFields name="TopQuestions" label="top_questions" description="null">
              <elements xsi:type="restmule:UndefinedType" name="topQuestions" label="top_questions" description="null"/>
            </listFields>
            <listFields name="TopAnswers" label="top_answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="topAnswers" label="top_answers" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/unanswered">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/tags/{tags}/top-questions">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Path" description="String list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="tags" label="tags" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/notifications">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Notifications" label="notifications" description="null">
          <elements xsi:type="restmule:ObjectType" name="Notifications" label="notifications" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="notificationType" label="notification_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/top-question-tags">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="TopTagObjects" label="top_tag_objects" description="null">
          <elements xsi:type="restmule:ObjectType" name="TopTagObjects" label="top_tag_objects" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="questionCount" label="question_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="tagName" label="tag_name" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionScore" label="question_score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerScore" label="answer_score" description="null"/>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{ids}/questions/no-answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="Number list (semicolon delimited)." required="true">
        <type xsi:type="restmule:TString" name="ids" label="ids" description="Number list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/users/{id}/notifications/unread">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Path" description="null" required="true">
        <type xsi:type="restmule:TInteger" name="id" label="id" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Notifications" label="notifications" description="null">
          <elements xsi:type="restmule:ObjectType" name="Notifications" label="notifications" description="null" required="true">
            <attributes xsi:type="restmule:TString" name="notificationType" label="notification_type" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="postId" label="post_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isUnread" label="is_unread" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <nestedObjects name="Site" label="site" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
              <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
              <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
              <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
              <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
              <nestedObjects name="Styling" label="styling" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
              </nestedObjects>
              <listFields name="Aliases" label="aliases" description="null">
                <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
              </listFields>
              <listFields name="RelatedSites" label="related_sites" description="null">
                <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
              </listFields>
              <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
              </listFields>
            </nestedObjects>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/questions/no-answers">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <endpoints path="/similar">
    <requests description="null" scope="//@ratePolicy/@scopes.0">
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="tagged" label="tagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="order" label="order" description="null" pattern="(desc|asc)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="max" label="max" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none" required="false">
        <type xsi:type="restmule:TString" name="min" label="min" description="sort = activity => date&#xA;sort = creation => date&#xA;sort = votes => number&#xA;sort = relevance => none"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TFormattedString" name="sort" label="sort" description="null" pattern="(activity|creation|votes|relevance)"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="fromdate" label="fromdate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Unix date." required="false">
        <type xsi:type="restmule:TInteger" name="todate" label="todate" description="Unix date."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TInteger" name="page" label="page" description="null"/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters." required="false">
        <type xsi:type="restmule:TString" name="filter" label="filter" description="#Discussion&#xA;&#xA;The Stack Exchange API allows applications to exclude almost every field returned. For example, if an application did not care about a user's badge counts it could exclude user.badge_counts whenever it calls a method that returns users.&#xA;&#xA;An application excludes fields by creating a filter (via /filter/create) and passing it to a method in the filter parameter.&#xA;&#xA;Filters are immutable and non-expiring. An application can safely &quot;bake in&quot; any filters that are created, it is not necessary (or advisable) to create filters at runtime.&#xA;&#xA;The motivation for filters are several fold. Filters allow applications to reduce API responses to just the fields they are concerned with, saving bandwidth. With the list of fields an application is actually concerned with, the API can avoid unneccessary queries thereby decreasing response time (and reducing load on our infrastructure). Finally, filters allow us to be more conservative in what the API returns by default without a proliferation of parameters (as was seen with body, answers, and comments in the 1.x API family).&#xA;&#xA;#Safety&#xA;&#xA;Filters also carry a notion of safety, which is defined as follows. Any string returned as a result of an API call with a safe filter will be inline-able into HTML without script-injection concerns. That is to say, no additional sanitizing (encoding, HTML tag stripping, etc.) will be necessary on returned strings. Applications that wish to handle sanitizing themselves should create an unsafe filter. All filters are safe by default, under the assumption that double-encoding bugs are more desirable than script injections.&#xA;&#xA;Note that this does not mean that &quot;safe&quot; filter is mearly an &quot;unsafe&quot; one with all fields passed though UrlEncode(...). Many fields can and will contain HTML in all filter types (most notably, the *.body fields).&#xA;&#xA;When using unsafe filters, the API returns the highest fidelity data it can reasonably access for the given request. This means that in cases where the &quot;safe&quot; data is the only accessible data it will be returned even in &quot;unsafe&quot; filters. Notably the *.body fields are unchanged, as they are stored in that form. Fields that are unchanged between safe and unsafe filters are denoted in their types documentation.&#xA;&#xA;#Built In Filters&#xA;&#xA;The following filters are built in:&#xA;&#xA;default, each type documents which fields are returned under the default filter (for example, answers).&#xA;withbody, which is default plus the *.body fields&#xA;none, which is empty&#xA;total, which includes just .total&#xA;&#xA;#Compatibility with V1.x&#xA;&#xA;For ease of transition from earlier API versions, the filters _b, _ba, _bc, _bca, _a, _ac, and _c are also built in. These are unsafe, and exclude a combination of question and answer body, comments, and answers so as to mimic the body, answers, and comments parameters that have been removed in V2.0. New applications should not use these filters."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="All API responses are JSON, we do support JSONP with the callback query parameter." required="false">
        <type xsi:type="restmule:TString" name="callback" label="callback" description="All API responses are JSON, we do support JSONP with the callback query parameter."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object." required="true">
        <type xsi:type="restmule:TString" name="site" label="site" description="Each of these methods operates on a single site at a time, identified by the site parameter. This parameter can be the full domain name (ie. &quot;stackoverflow.com&quot;), or a short form identified by api_site_parameter on the site object."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="String list (semicolon delimited)." required="false">
        <type xsi:type="restmule:TString" name="nottagged" label="nottagged" description="String list (semicolon delimited)."/>
      </parameters>
      <parameters xsi:type="restmule:Query" description="null" required="false">
        <type xsi:type="restmule:TString" name="title" label="title" description="null"/>
      </parameters>
      <responses code="200" description="OK">
        <responseType xsi:type="restmule:ListType" name="Questions" label="questions" description="null">
          <elements xsi:type="restmule:ObjectType" name="Questions" label="questions" description="null" required="true">
            <attributes xsi:type="restmule:TInteger" name="commentCount" label="comment_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closedDate" label="closed_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lockedDate" label="locked_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canFlag" label="can_flag" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="answerCount" label="answer_count" description="null"/>
            <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            <attributes xsi:type="restmule:TString" name="title" label="title" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="communityOwnedDate" label="community_owned_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="score" label="score" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="acceptedAnswerId" label="accepted_answer_id" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="downvoted" label="downvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="downVoteCount" label="down_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="reopenVoteCount" label="reopen_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyClosesDate" label="bounty_closes_date" description="null"/>
            <attributes xsi:type="restmule:TString" name="closedReason" label="closed_reason" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="favoriteCount" label="favorite_count" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="favorited" label="favorited" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastActivityDate" label="last_activity_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
            <attributes xsi:type="restmule:TString" name="shareLink" label="share_link" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="canClose" label="can_close" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="bountyAmount" label="bounty_amount" description="null"/>
            <attributes xsi:type="restmule:TString" name="bodyMarkdown" label="body_markdown" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="upvoted" label="upvoted" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="protectedDate" label="protected_date" description="null"/>
            <attributes xsi:type="restmule:TBoolean" name="isAnswered" label="is_answered" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="closeVoteCount" label="close_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="deleteVoteCount" label="delete_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="upVoteCount" label="up_vote_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="viewCount" label="view_count" description="null"/>
            <attributes xsi:type="restmule:TInteger" name="lastEditDate" label="last_edit_date" description="null"/>
            <nestedObjects name="ClosedDetails" label="closed_details" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="reason" label="reason" description="null"/>
              <attributes xsi:type="restmule:TString" name="description" label="description" description="null"/>
              <attributes xsi:type="restmule:TBoolean" name="onHold" label="on_hold" description="null"/>
              <listFields name="ByUsers" label="by_users" description="null">
                <elements xsi:type="restmule:UndefinedType" name="byUsers" label="by_users" description="null"/>
              </listFields>
              <listFields name="OriginalQuestions" label="original_questions" description="null">
                <elements xsi:type="restmule:UndefinedType" name="originalQuestions" label="original_questions" description="null"/>
              </listFields>
            </nestedObjects>
            <nestedObjects name="MigratedTo" label="migrated_to" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSiteInner" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="Styling" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="Notice" label="notice" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="ownerUserId" label="owner_user_id" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="creationDate" label="creation_date" description="null"/>
              <attributes xsi:type="restmule:TString" name="body" label="body" description="null"/>
            </nestedObjects>
            <nestedObjects name="Owner" label="owner" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="LastEditor" label="last_editor" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCountsInnerInner" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="MigratedFrom" label="migrated_from" description="null" required="true">
              <attributes xsi:type="restmule:TInteger" name="onDate" label="on_date" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="questionId" label="question_id" description="null"/>
              <nestedObjects name="OtherSite" label="other_site" description="null" required="true">
                <attributes xsi:type="restmule:TString" name="iconUrl" label="icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="audience" label="audience" description="null"/>
                <attributes xsi:type="restmule:TString" name="faviconUrl" label="favicon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteType" label="site_type" description="null"/>
                <attributes xsi:type="restmule:TString" name="logoUrl" label="logo_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="apiSiteParameter" label="api_site_parameter" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="openBetaDate" label="open_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteState" label="site_state" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="closedBetaDate" label="closed_beta_date" description="null"/>
                <attributes xsi:type="restmule:TString" name="siteUrl" label="site_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="name" label="name" description="null"/>
                <attributes xsi:type="restmule:TString" name="highResolutionIconUrl" label="high_resolution_icon_url" description="null"/>
                <attributes xsi:type="restmule:TString" name="twitterAccount" label="twitter_account" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="launchDate" label="launch_date" description="null"/>
                <nestedObjects name="StylingInner" label="styling" description="null" required="true">
                  <attributes xsi:type="restmule:TString" name="tagBackgroundColor" label="tag_background_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="linkColor" label="link_color" description="null"/>
                  <attributes xsi:type="restmule:TString" name="tagForegroundColor" label="tag_foreground_color" description="null"/>
                </nestedObjects>
                <listFields name="Aliases" label="aliases" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="aliases" label="aliases" description="null"/>
                </listFields>
                <listFields name="RelatedSites" label="related_sites" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="relatedSites" label="related_sites" description="null"/>
                </listFields>
                <listFields name="MarkdownExtensions" label="markdown_extensions" description="null">
                  <elements xsi:type="restmule:UndefinedType" name="markdownExtensions" label="markdown_extensions" description="null"/>
                </listFields>
              </nestedObjects>
            </nestedObjects>
            <nestedObjects name="BountyUser" label="bounty_user" description="null" required="true">
              <attributes xsi:type="restmule:TString" name="profileImage" label="profile_image" description="null"/>
              <attributes xsi:type="restmule:TString" name="userType" label="user_type" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="userId" label="user_id" description="null"/>
              <attributes xsi:type="restmule:TString" name="link" label="link" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="reputation" label="reputation" description="null"/>
              <attributes xsi:type="restmule:TString" name="displayName" label="display_name" description="null"/>
              <attributes xsi:type="restmule:TInteger" name="acceptRate" label="accept_rate" description="null"/>
              <nestedObjects name="BadgeCounts" label="badge_counts" description="null" required="true">
                <attributes xsi:type="restmule:TInteger" name="gold" label="gold" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="silver" label="silver" description="null"/>
                <attributes xsi:type="restmule:TInteger" name="bronze" label="bronze" description="null"/>
              </nestedObjects>
            </nestedObjects>
            <listFields name="Answers" label="answers" description="null">
              <elements xsi:type="restmule:UndefinedType" name="answers" label="answers" description="null"/>
            </listFields>
            <listFields name="Comments" label="comments" description="null">
              <elements xsi:type="restmule:UndefinedType" name="comments" label="comments" description="null"/>
            </listFields>
            <listFields name="Tags" label="tags" description="null">
              <elements xsi:type="restmule:UndefinedType" name="tags" label="tags" description="null"/>
            </listFields>
          </elements>
        </responseType>
      </responses>
      <responses code="400" description="bad_parameter &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 400 An invalid parameter was passed, this includes even &quot;high level&quot; parameters like key or site."/>
      <responses code="401" description="access_token_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 401 A method that requires an access token (obtained via authentication) was called without one."/>
      <responses code="500" description="internal_error &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 500 An unexpected error occurred in the API. It has been logged, and Stack Exchange developers have been notified. You should report these errors on Stack Apps if you want to be notified when they're fixed."/>
      <responses code="402" description="invalid_access_token &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 402 An invalid access token was passed to a method."/>
      <responses code="403" description="access_denied &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 403 A method which requires certain permissions was called with an access token that lacks those permissions."/>
      <responses code="502" description="throttle_violation &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 502 An application has violated part of the rate limiting contract, so the request was terminated."/>
      <responses code="404" description="no_method &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 404 An attempt was made to call a method that does not exist. Note, calling methods that expect numeric ids (like /users/{ids}) with non-numeric ids can also result in this error."/>
      <responses code="503" description="temporarily_unavailable &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 503 Some or all of the API is unavailable. Applications should backoff on requests to the method invoked."/>
      <responses code="405" description="key_required &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 405 A method was called in a manner that requires an application key (generally, with an access token), but no key was passed."/>
      <responses code="406" description="access_token_compromised &#xc3;&#x192;&#xc2;&#xa2;&#xc3;&#xa2;&#xe2;&#x20ac;&#x161;&#xc2;&#xac;&#xc3;&#xa2;&#xe2;&#x201a;&#xac;&#xc5;&#x201c; 406 An access token is no longer believed to be secure, normally because it was used on a non-HTTPS call. The access token will be invalidated if this error is returned."/>
    </requests>
  </endpoints>
  <pageWrapper name="Wrapper" totalLabel="total_count" incompleteLabel="has_more">
    <items label="items"/>
  </pageWrapper>
  <ratePolicy>
    <limit xsi:type="restmule:ResponseHeader">
      <type xsi:type="restmule:TInteger" label="quota_max"/>
    </limit>
    <reset xsi:type="restmule:ResponseHeader">
      <type xsi:type="restmule:TInteger" label=""/>
    </reset>
    <remaining xsi:type="restmule:ResponseHeader">
      <type xsi:type="restmule:TInteger" label="quota_remaining"/>
    </remaining>
    <scopes scope="Entity" requests="//@endpoints.1/@requests.0 //@endpoints.2/@requests.0 //@endpoints.3/@requests.0 //@endpoints.4/@requests.0 //@endpoints.5/@requests.0 //@endpoints.6/@requests.0 //@endpoints.7/@requests.0 //@endpoints.8/@requests.0 //@endpoints.9/@requests.0 //@endpoints.10/@requests.0 //@endpoints.11/@requests.0 //@endpoints.12/@requests.0 //@endpoints.13/@requests.0 //@endpoints.14/@requests.0 //@endpoints.15/@requests.0 //@endpoints.16/@requests.0 //@endpoints.17/@requests.0 //@endpoints.18/@requests.0 //@endpoints.19/@requests.0 //@endpoints.20/@requests.0 //@endpoints.21/@requests.0 //@endpoints.22/@requests.0 //@endpoints.23/@requests.0 //@endpoints.24/@requests.0 //@endpoints.25/@requests.0 //@endpoints.26/@requests.0 //@endpoints.27/@requests.0 //@endpoints.28/@requests.0 //@endpoints.29/@requests.0 //@endpoints.30/@requests.0 //@endpoints.31/@requests.0 //@endpoints.33/@requests.0 //@endpoints.34/@requests.0 //@endpoints.35/@requests.0 //@endpoints.36/@requests.0 //@endpoints.37/@requests.0 //@endpoints.38/@requests.0 //@endpoints.39/@requests.0 //@endpoints.40/@requests.0 //@endpoints.41/@requests.0 //@endpoints.42/@requests.0 //@endpoints.43/@requests.0 //@endpoints.44/@requests.0 //@endpoints.46/@requests.0 //@endpoints.48/@requests.0 //@endpoints.49/@requests.0 //@endpoints.50/@requests.0 //@endpoints.51/@requests.0 //@endpoints.52/@requests.0 //@endpoints.53/@requests.0 //@endpoints.54/@requests.0 //@endpoints.55/@requests.0 //@endpoints.56/@requests.0 //@endpoints.57/@requests.0 //@endpoints.58/@requests.0 //@endpoints.59/@requests.0 //@endpoints.60/@requests.0 //@endpoints.61/@requests.0 //@endpoints.62/@requests.0 //@endpoints.63/@requests.0 //@endpoints.64/@requests.0 //@endpoints.65/@requests.0 //@endpoints.66/@requests.0 //@endpoints.67/@requests.0 //@endpoints.68/@requests.0 //@endpoints.69/@requests.0 //@endpoints.70/@requests.0 //@endpoints.71/@requests.0 //@endpoints.72/@requests.0 //@endpoints.73/@requests.0 //@endpoints.74/@requests.0 //@endpoints.75/@requests.0 //@endpoints.76/@requests.0 //@endpoints.77/@requests.0 //@endpoints.78/@requests.0 //@endpoints.79/@requests.0 //@endpoints.80/@requests.0 //@endpoints.81/@requests.0 //@endpoints.82/@requests.0 //@endpoints.83/@requests.0 //@endpoints.84/@requests.0 //@endpoints.85/@requests.0 //@endpoints.86/@requests.0 //@endpoints.87/@requests.0 //@endpoints.88/@requests.0 //@endpoints.90/@requests.0 //@endpoints.91/@requests.0 //@endpoints.92/@requests.0 //@endpoints.93/@requests.0 //@endpoints.94/@requests.0 //@endpoints.95/@requests.0 //@endpoints.96/@requests.0 //@endpoints.97/@requests.0 //@endpoints.98/@requests.0 //@endpoints.99/@requests.0 //@endpoints.100/@requests.0 //@endpoints.101/@requests.0 //@endpoints.102/@requests.0 //@endpoints.103/@requests.0 //@endpoints.104/@requests.0 //@endpoints.105/@requests.0 //@endpoints.106/@requests.0 //@endpoints.107/@requests.0 //@endpoints.108/@requests.0 //@endpoints.109/@requests.0 //@endpoints.110/@requests.0 //@endpoints.111/@requests.0 //@endpoints.112/@requests.0 //@endpoints.113/@requests.0 //@endpoints.114/@requests.0 //@endpoints.115/@requests.0 //@endpoints.116/@requests.0 //@endpoints.117/@requests.0 //@endpoints.118/@requests.0 //@endpoints.119/@requests.0 //@endpoints.120/@requests.0 //@endpoints.121/@requests.0 //@endpoints.122/@requests.0 //@endpoints.123/@requests.0">
      <policies xsi:type="restmule:Policy" limit="10000" auths="//@auth.0 //@auth.2"/>
      <policies xsi:type="restmule:Policy" limit="1000" auths="//@auth.1"/>
    </scopes>
    <scopes scope="Search" requests="//@endpoints.0/@requests.0 //@endpoints.89/@requests.0">
      <policies xsi:type="restmule:Policy" limit="10000" auths="//@auth.0 //@auth.2"/>
      <policies xsi:type="restmule:Policy" limit="1000" auths="//@auth.1"/>
    </scopes>
  </ratePolicy>
  <pagination start="1" max="100" increment="1" maxPerIteration="100">
    <perIteration xsi:type="restmule:Query" description="Items per page" required="false">
      <type xsi:type="restmule:TInteger" name="pagesize" label="pagesize"/>
    </perIteration>
    <page xsi:type="restmule:Query" description="Page identifier" required="false">
      <type xsi:type="restmule:TInteger" name="page" label="page"/>
    </page>
    <links description="Page links">
      <type xsi:type="restmule:TFormattedString" name="Link" label="Link"/>
    </links>
  </pagination>
  <auth xsi:type="restmule:OAuth" rateLimits="//@ratePolicy/@scopes.1/@policies.0 //@ratePolicy/@scopes.0/@policies.0" tokenUrl="null" authUrl="https://stackexchange.com/oauth"/>
  <auth xsi:type="restmule:NoAuth" rateLimits="//@ratePolicy/@scopes.1/@policies.1 //@ratePolicy/@scopes.0/@policies.1"/>
  <auth xsi:type="restmule:BasicAuth" rateLimits="//@ratePolicy/@scopes.1/@policies.0 //@ratePolicy/@scopes.0/@policies.0"/>
</restmule:API>
