from crossflow.runtime import Job
from crossflow.projectanalysis.repository import Repository


class JavaRepositoryAnalysisResult(Repository):
    """NOTE: Auto-generated by Type2Class on 2019-12-19T16:51:07.797Z
    Do not edit this class manually
    """

    def __init__(self,
        size_at_commit: int = None,
        number_of_files: int = None,
        path: str = None,
        url: str = None,
        commit: str = None,
        correlation: Job = None
    ):
        super().__init__()
        self._size_at_commit = size_at_commit
        self._number_of_files = number_of_files
        self._path = path
        self._url = url
        self._commit = commit
        if correlation is not None:
            self.correlationId = correlation.correlationId

    @property
    def size_at_commit(self) -> int:
        return self._size_at_commit

    @size_at_commit.setter
    def size_at_commit(self, size_at_commit: int):
        self._size_at_commit = size_at_commit

    @property
    def number_of_files(self) -> int:
        return self._number_of_files

    @number_of_files.setter
    def number_of_files(self, number_of_files: int):
        self._number_of_files = number_of_files

    def __str__(self):
        return f"JavaRepositoryAnalysisResult ( size_at_commit={self.size_at_commit}, number_of_files={self.number_of_files}, jobId={self.jobId}, correlationId={self.correlationId}, destination={self.destination} )"
