from crossflow.runtime import Job
from crossflow.projectanalysis.java_repository_analysis_result import JavaRepositoryAnalysisResult


class PythonRepositoryAnalysisResult(JavaRepositoryAnalysisResult):
    """NOTE: Auto-generated by Type2Class on 2019-12-19T16:51:07.797Z
    Do not edit this class manually
    """

    def __init__(self,
        lines_added: int = None,
        lines_deleted: int = None,
        number_of_commits: int = None,
        num_of_devs: int = None,
        project_duration: int = None,
        project_lo_c: int = None,
        size_at_commit: int = None,
        number_of_files: int = None,
        path: str = None,
        url: str = None,
        commit: str = None,
        correlation: Job = None
    ):
        super().__init__()
        self._lines_added = lines_added
        self._lines_deleted = lines_deleted
        self._number_of_commits = number_of_commits
        self._num_of_devs = num_of_devs
        self._project_duration = project_duration
        self._project_lo_c = project_lo_c
        self._size_at_commit = size_at_commit
        self._number_of_files = number_of_files
        self._path = path
        self._url = url
        self._commit = commit
        if correlation is not None:
            self.correlationId = correlation.correlationId

    @property
    def lines_added(self) -> int:
        return self._lines_added

    @lines_added.setter
    def lines_added(self, lines_added: int):
        self._lines_added = lines_added

    @property
    def lines_deleted(self) -> int:
        return self._lines_deleted

    @lines_deleted.setter
    def lines_deleted(self, lines_deleted: int):
        self._lines_deleted = lines_deleted

    @property
    def number_of_commits(self) -> int:
        return self._number_of_commits

    @number_of_commits.setter
    def number_of_commits(self, number_of_commits: int):
        self._number_of_commits = number_of_commits

    @property
    def num_of_devs(self) -> int:
        return self._num_of_devs

    @num_of_devs.setter
    def num_of_devs(self, num_of_devs: int):
        self._num_of_devs = num_of_devs

    @property
    def project_duration(self) -> int:
        return self._project_duration

    @project_duration.setter
    def project_duration(self, project_duration: int):
        self._project_duration = project_duration

    @property
    def project_lo_c(self) -> int:
        return self._project_lo_c

    @project_lo_c.setter
    def project_lo_c(self, project_lo_c: int):
        self._project_lo_c = project_lo_c

    def __str__(self):
        return f"PythonRepositoryAnalysisResult ( lines_added={self.lines_added}, lines_deleted={self.lines_deleted}, number_of_commits={self.number_of_commits}, num_of_devs={self.num_of_devs}, project_duration={self.project_duration}, project_lo_c={self.project_lo_c}, jobId={self.jobId}, correlationId={self.correlationId}, destination={self.destination} )"
