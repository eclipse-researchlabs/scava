@cached
operation CrossflowLanguageModel!DataField getBoxedName() : String {
	switch (self.type) {
		case "int": return "Integer";
		case "char": return "Character";
		case "long": return "Long";
		case "byte": return "Byte";
		case "short": return "Short";
		case "float": return "Float";
		case "double" : return "Double";
	}
	return self.type;
}

@cached
operation CrossflowLanguageModel!EnumField getBoxedName() : String {
	return self.type;
}

operation CrossflowLanguageModel!Workflow getSerializer() : CrossflowLanguageModel!Serializer {
	var s = self.serializer;
	if (s.isUndefined()) {
		s = new CrossflowLanguageModel!Serializer;
	}

	if ("xml".equalsIgnoreCase(s.name)) {
		s.~implClass = "XstreamSerializer";
	} 
	// Default to JSON in all other cases
	else {
		s.~implClass = "JsonSerializer";
	}
	
	return s; 
}