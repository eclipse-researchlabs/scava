[%
	var lang = w.languages.select(l|l.name.toLowerCase() == "java");
	var langExists = not lang.isEmpty;

	var package = w.name.ftlc;
	
	if(langExists) package = lang.first.package;
%]
package [%=package%];

import java.io.File;

import org.eclipse.scava.crossflow.runtime.utils.LogLevel;
import org.eclipse.scava.crossflow.runtime.utils.CsvWriter;

public class [%=t.name%] extends [%=t.name%]Base {
	// CSV file writer(s)
	[% for (s in t.input) {%]
	protected CsvWriter writer[%=loopCount%];
	[%}%]
	
	[%for (s in t.input) {%]
	@Override
	public void consume[%=s.name%]([%=s.type.name%] [%=s.type.name.ftlc()%]) {
		try {
			[% for (s in t.input) {%]
			if ( writer[%=loopCount%] == null ) {
				writer[%=loopCount%] = new CsvWriter(new File(workflow.getOutputDirectory(), "[%=t.fileName%]").getAbsolutePath(), [%for (f in s.type.fields) { %]"[%=f.name%]", [%}%] "cached");
			}
			[%}%]
		
			writer[%=loopCount%].writeRecord( [%for (f in s.type.fields) { %][%=s.type.name.ftlc()%].get[%=f.name.ftuc()%](), [%}%] [%=s.type.name.ftlc()%].isCached() );
			writer[%=loopCount%].flush();
		} catch (Exception e) {
			workflow.log(LogLevel.ERROR, e.getMessage());
		}
	}
	
	[%}%]

}