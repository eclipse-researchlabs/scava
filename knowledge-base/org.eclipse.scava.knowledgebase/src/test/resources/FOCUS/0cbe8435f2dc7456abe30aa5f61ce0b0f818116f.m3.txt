org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyReference(java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyReference(java.lang.String)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyDefaultParserBeanBehaviour()#org/springframework/beans/factory/support/BeanDefinitionBuilder/setInitMethodName(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyDefaultParserBeanBehaviour()#org/springframework/beans/factory/support/BeanDefinitionBuilder/setLazyInit(boolean)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyDefaultParserBeanBehaviour()#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyDefaultParserBeanBehaviour()#org/springframework/beans/factory/support/BeanDefinitionBuilder/setDestroyMethodName(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyDefaultParserBeanBehaviour()#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/hamcrest/Matchers/is(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/hamcrest/collection/IsCollectionContaining/hasItems(T[])
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/mockito/Matchers/argThat(org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)#org/hamcrest/collection/IsMapContaining/hasEntry(K,V)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)#org/hamcrest/Matchers/is(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)#org/mockito/Matchers/argThat(org.hamcrest.Matcher)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isWriteReplaceMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isWriteReplaceMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isWriteReplaceMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isWriteReplaceMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#net/sf/cglib/proxy/Enhancer/create()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java/lang/Class,org/ops4j/pax/wicket/spi/ProxyTargetLocator)/$anonymous1/()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#net/sf/cglib/core/AbstractClassGenerator/setNamingPolicy(net.sf.cglib.core.NamingPolicy)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class<?>[],java.lang.reflect.InvocationHandler)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/Class/isPrimitive()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#net/sf/cglib/proxy/Enhancer/Enhancer()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#net/sf/cglib/proxy/Enhancer/setInterfaces(java.lang.Class[])
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/getRealTarget(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/Class/isInterface()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/spi/ProxyTargetLocator/locateProxyTarget()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/JdkHandler(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/CGLibInterceptor(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/util/List/contains(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#net/sf/cglib/proxy/Enhancer/setCallback(net.sf.cglib.proxy.Callback)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#net/sf/cglib/proxy/Enhancer/setSuperclass(java.lang.Class)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/spi/ReleasableProxyTarget/releaseTarget()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isHashCodeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isHashCodeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isHashCodeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isHashCodeMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isFinalizeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isFinalizeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isFinalizeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isFinalizeMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isEqualsMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isEqualsMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isEqualsMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isEqualsMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isToStringMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isToStringMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isToStringMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isToStringMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/getRealTarget(java.lang.Object)#org/ops4j/pax/wicket/spi/ProxyTarget/getTarget()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#javax/servlet/http/HttpServletRequest/getServletPath()
org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/length()
org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/spi/support/ComponentProxy/isHashCodeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isHashCodeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isHashCodeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isHashCodeMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetInjectionSourceMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetInjectionSourceMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetInjectionSourceMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetInjectionSourceMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/isEqualsMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isEqualsMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isEqualsMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isEqualsMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/isToStringMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isToStringMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isToStringMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isToStringMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetOverwritesMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetOverwritesMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetOverwritesMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetOverwritesMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/isFinalizeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isFinalizeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isFinalizeMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/spi/support/ComponentProxy/isFinalizeMethod(java.lang.reflect.Method)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/getInjectionSource()
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetInjectionSourceMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/getOverwrites()
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/isFinalizeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/isEqualsMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Object/hashCode()
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#net/sf/cglib/proxy/MethodProxy/invokeSuper(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/isToStringMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/isGetOverwritesMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Object/toString()
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/support/ComponentProxy/isHashCodeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/spi/support/ComponentProxy/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Integer/Integer(int)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/SpringPageFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/getBeanClass(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/SpringParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.springdm.injection.spring.AbstractSpringBeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/SpringPageFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintFilterFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintFilterFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintFilterFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelperDecorator/stop()#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/dispose()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelperDecorator/start()#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setApplicationName(java.lang.String[])
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelperDecorator/start()#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/register()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelperDecorator/start()#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolverHelper(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/decorate(org.w3c.dom.Node,org.osgi.service.blueprint.reflect.ComponentMetadata,org.apache.aries.blueprint.ParserContext)#org/osgi/service/blueprint/container/ComponentDefinitionException/ComponentDefinitionException(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/getManagedClasses()#java/util/Map/values()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/getManagedClasses()#java/util/Set/add(E)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/getManagedClasses()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/getManagedClasses()#java/util/HashSet/HashSet()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/getSchemaLocation(java.lang.String)#java/lang/Class/getResource(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/getSchemaLocation(java.lang.String)#java/lang/Object/getClass()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/osgi/service/blueprint/container/ComponentDefinitionException/ComponentDefinitionException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/w3c/dom/Node/getNodeName()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/retrieveDefinitionParser(org.w3c.dom.Node)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#java/lang/Throwable/getMessage()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/retrieveDefinitionParser(org.w3c.dom.Node)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/retrieveDefinitionParser(org.w3c.dom.Node)#org/w3c/dom/Node/getLocalName()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/retrieveDefinitionParser(org.w3c.dom.Node)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/retrieveDefinitionParser(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeName()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintNamespaceHandler/retrieveDefinitionParser(org.w3c.dom.Node)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringTestUtil/loadFirstElementThatMatches(java.lang.String)#org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringTestUtil/loadSpringXml()#org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadXml(java.lang.String)
org/ops4j/pax/wicket/api/InjectorHolder/getInjector()#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/api/InjectorHolder/getInjector()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/InjectorHolder/getInjector()#org/apache/wicket/Application/getApplicationKey()
org/ops4j/pax/wicket/api/InjectorHolder/getInjector()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/InjectorHolder/getInjector()#org/apache/wicket/Application/get()
org/ops4j/pax/wicket/api/InjectorHolder/setInjector(java.lang.String,org.ops4j.pax.wicket.api.PaxWicketInjector)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/api/InjectorHolder/setInjector(java.lang.String,org.ops4j.pax.wicket.api.PaxWicketInjector)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundleContext/matchFilter(java.lang.String,java.util.Map)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundleContext/matchFilter(java.lang.String,java.util.Map)#org/osgi/framework/Filter/matches(java.util.Map)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundleContext/matchFilter(java.lang.String,java.util.Map)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundleContext/matchFilter(java.lang.String,java.util.Map)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/addingBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/addingBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingPAXWicketAPI()
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/addingBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/addingBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/addingBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/addingBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle.ExtendedBundleContext,org.osgi.framework.Bundle)
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/removedBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent,org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/removedBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent,org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/removedBundle(org.osgi.framework.Bundle,org.osgi.framework.BundleEvent,org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerialization()#org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerialization()/$anonymous1/()
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerialization()#org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerialization()#org/ops4j/pax/wicket/util/serialization/SerializationTest/createSomeObject()
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/flush()
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#junit/framework/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#junit/framework/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#java/io/ObjectInputStream/readObject()
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/PaxWicketObjectOutputStream(java.io.OutputStream)
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#java/io/ByteArrayOutputStream/toByteArray()
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/PaxWicketObjectInputStream(java.io.InputStream,org.apache.wicket.application.IClassResolver)
org/ops4j/pax/wicket/util/serialization/SerializationTest/testSerializeObject(java.lang.Object,org.apache.wicket.application.IClassResolver)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/SerializationTest/createSomeObject()#org/ops4j/pax/wicket/util/serialization/SerializationTest/SomeObject/SomeObject()
org/ops4j/pax/wicket/util/serialization/SerializationTest/createSomeObject()#java/util/Random/nextInt()
org/ops4j/pax/wicket/util/serialization/SerializationTest/createSomeObject()#java/util/Random/Random(long)
org/ops4j/pax/wicket/util/serialization/SerializationTest/createSomeObject()#java/util/Random/nextLong()
org/ops4j/pax/wicket/util/serialization/SerializationTest/createSomeObject()#java/lang/System/currentTimeMillis()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/newObjectInputStream(java.io.InputStream)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/getClassResolver()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/newObjectInputStream(java.io.InputStream)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/PaxWicketObjectInputStream(java.io.InputStream,org.apache.wicket.application.IClassResolver)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/getClassResolver()#org/apache/wicket/Application/getApplicationSettings()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/getClassResolver()#org/apache/wicket/settings/IApplicationSettings/getClassResolver()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/getClassResolver()#org/apache/wicket/protocol/http/WebApplication/get()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/newObjectOutputStream(java.io.OutputStream)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/PaxWicketObjectOutputStream(java.io.OutputStream)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/service(javax/servlet/ServletRequest,javax/servlet/ServletResponse)/$anonymous1/()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/Filter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/getServletInfo()#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getApplicationName()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/getServletInfo()#org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/toString()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/WicketFilterCallback/WicketFilterCallback(org.apache.wicket.protocol.http.IWebApplicationFactory)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/PAXWicketServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory,javax.servlet.Filter)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#net/sf/cglib/proxy/Enhancer/create()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getFilterClass()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/ServletCallInterceptor(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory,javax.servlet.Servlet)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#net/sf/cglib/proxy/Enhancer/Enhancer()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#net/sf/cglib/proxy/Enhancer/setCallback(net.sf.cglib.proxy.Callback)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#net/sf/cglib/proxy/Enhancer/setSuperclass(java.lang.Class)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax.servlet.ServletConfig)#javax/servlet/Filter/init(javax.servlet.FilterConfig)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax/servlet/ServletConfig)/$anonymous1/()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax.servlet.ServletConfig)#javax/servlet/ServletConfig/getServletContext()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax.servlet.ServletConfig)#javax/servlet/ServletContext/setAttribute(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getTmpDir()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/init(javax.servlet.ServletConfig)#javax/servlet/ServletContext/getAttribute(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/destroy()#javax/servlet/Filter/destroy()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#java/lang/String/isEmpty()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addingService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addingService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getContextParams()
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/createServlet(org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#java/lang/System/identityHashCode(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/isValidFactory()
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getMountPoint()
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addApplication(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.PaxWicketApplicationFactory)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.ServiceReference)#org/osgi/framework/ServiceReference/getBundle()
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#java/lang/System/identityHashCode(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/HttpTracker/removeServlet(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getMountPoint()
org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/removeApplication(org.osgi.framework.ServiceReference)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/register()#org/osgi/framework/BundleContext/registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/register()#org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/BundleInjectionResolver()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/getServicePid()#java/util/Hashtable/get(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setServicePid(java.lang.String)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setServicePid(java.lang.String)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setServicePid(java.lang.String)#java/util/Hashtable/remove(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/dispose()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setApplicationName(java.lang.String)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setApplicationName(java.lang.String)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setApplicationName(java.lang.String)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/BundleAnalysingComponentInstantiationListener(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTracker)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/setApplicationName(java.lang.String)#java/util/Hashtable/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/register(org.osgi.service.http.HttpService)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/register(org.osgi.service.http.HttpService)#org/osgi/service/http/HttpService/registerServlet(java.lang.String,javax.servlet.Servlet,java.util.Dictionary,org.osgi.service.http.HttpContext)
org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/register(org.osgi.service.http.HttpService)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/register(org.osgi.service.http.HttpService)#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/getAlias()
org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/unregister()#org/osgi/service/http/HttpService/unregister(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/unregister()#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/getAlias()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getBeanType(java.lang.reflect.Field)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/lang/Class/getSuperclass()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/checkAccessabilityOfField(java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/Class/getSuperclass()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/checkAccessabilityOfField(java.lang.reflect.Field)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/checkAccessabilityOfField(java.lang.reflect.Field)#java/lang/reflect/AccessibleObject/isAccessible()
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintAutoPageMounterDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintAutoPageMounterDefinitionParser/BlueprintAutoPageMounterDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintAutoPageMounterDefinitionParser/BlueprintAutoPageMounterDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/BlueprintParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.blueprint.injection.blueprint.AbstractBlueprintBeanDefinitionParser)
org/ops4j/pax/wicket/spi/blueprint/BlueprintAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getSuperFilterList()#java/util/Collections/unmodifiableList(java.util.List)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#org/osgi/framework/ServiceReference/getBundle()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/filter/FilterDelegator/FilterDelegator(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#org/osgi/framework/Bundle/getBundleContext()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#java/util/HashMap/HashMap()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#java/io/File/mkdirs()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/retrieveTmpFile(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createPaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/PaxWicketApplicationFactory(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.api.WebApplicationFactory,java.lang.String,java.lang.String,java.util.Map,java.io.File,org.ops4j.pax.wicket.internal.filter.FilterDelegator)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createApplication(org.apache.wicket.protocol.http.WicketFilter)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/retrieveTmpFile(org.osgi.framework.BundleContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/retrieveTmpFile(org.osgi.framework.BundleContext)#java/io/File/File(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/retrieveTmpFile(org.osgi.framework.BundleContext)#java/lang/System/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/addToSuperFilterList(org.ops4j.pax.wicket.api.SuperFilter)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/addToSuperFilterList(org.ops4j.pax.wicket.api.SuperFilter)#org/ops4j/pax/wicket/api/SuperFilter/filter()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/addToSuperFilterList(org.ops4j.pax.wicket.api.SuperFilter)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/addToSuperFilterList(org.ops4j.pax.wicket.api.SuperFilter)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/api/WebApplicationFactory/getWebApplicationClass()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#net/sf/cglib/proxy/Enhancer/create()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/api/WebApplicationFactory/onInstantiation(C)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#net/sf/cglib/proxy/Enhancer/Enhancer()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/WebApplicationWrapper()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#net/sf/cglib/proxy/Enhancer/setCallback(net.sf.cglib.proxy.Callback)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/createFromFactory(org.ops4j.pax.wicket.api.WebApplicationFactory)#net/sf/cglib/proxy/Enhancer/setSuperclass(java.lang.Class)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/intialize()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/intialize()#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/intialize()#org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/ComponentInstanciationListenerTracker(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/Set/addAll(java.util.Collection)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/api/PaxWicketInjector/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Object/getClass()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/HashSet/HashSet()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/Set/toArray(T[])
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/getSuperclass()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/Set/size()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/Arrays/toString(java.lang.Object[])
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/Set/isEmpty()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/dispose()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/dispose()#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/createFilter(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/WicketNotSerializableException/WicketNotSerializableException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/TraceSlot/TraceSlot(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java/lang/Object)/$anonymous1/()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/io/Externalizable/writeExternal(java.io.ObjectOutput)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java/lang/Object)/InterceptingObjectOutputStream/InterceptingObjectOutputStream()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Object/getClass()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Class/isArray()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/reflect/Field/get(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class<?>[])
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/validateAdditionalSerializableConditions(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Class/getComponentType()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Class/getDeclaredField(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/reflect/Proxy/isProxyClass(java.lang.Class)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/util/LinkedList/removeLast()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Class/isPrimitive()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Throwable/getMessage()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Class/getName()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/lang/Boolean/booleanValue()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)#java/util/LinkedList/add(E)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/reset()#java/util/LinkedList/clear()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/reset()#java/util/Map/clear()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)#java/util/Vector/contains(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)#java/lang/Object/getClass()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)#java/util/Stack/push(E)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)#java/util/Stack/pop()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/writeObjectOverride(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/writeObjectOverride(java.lang.Object)#org/apache/wicket/Component/getPath()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/util/Iterator/next()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#org/apache/wicket/Component/getPath()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/util/AbstractList/listIterator()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/lang/Object/getClass()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/lang/StringBuffer/toString()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/lang/StringBuffer/append(java.lang.StringBuffer)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/toPrettyPrintedStack(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/lang/reflect/Field/getName()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/io/ObjectStreamClass/getFields()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/lang/reflect/Field/toString()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/checkFields(java.lang.Object,java.io.ObjectStreamClass)#java/lang/Integer/intValue()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()#java/lang/StringBuffer/append(char)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()#java/util/Iterator/next()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()#java/util/AbstractSequentialList/iterator()
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()#java/lang/StringBuffer/append(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/currentPath()#java/lang/StringBuffer/StringBuffer()
org/ops4j/pax/wicket/internal/MountTest/setup()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
org/ops4j/pax/wicket/internal/MountTest/setup()#org/ops4j/pax/wicket/internal/MountTest/setup()/$anonymous1/()
org/ops4j/pax/wicket/internal/MountTest/setup()#org/mockito/stubbing/OngoingStubbing/thenAnswer(org.mockito.stubbing.Answer)
org/ops4j/pax/wicket/internal/MountTest/setup()#org/osgi/framework/BundleContext/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/MountTest/setup()#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/MountTest/setup()#org/apache/wicket/util/tester/WicketTester/WicketTester()
org/ops4j/pax/wicket/internal/MountTest/setup()#org/mockito/Mockito/mock(java.lang.Class)
org/ops4j/pax/wicket/internal/MountTest/setup()#org/mockito/Mockito/when(T)
org/ops4j/pax/wicket/internal/MountTest/setup()#org/mockito/Matchers/anyString()
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/mockito/stubbing/OngoingStubbing/thenReturn(T)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#java/lang/Thread/start()
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/apache/wicket/util/tester/BaseWicketTester/getApplication()
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()/$anonymous1/()
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#java/util/concurrent/FutureTask/get()
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/ops4j/pax/wicket/internal/PageMounterTracker/PageMounterTracker(org.osgi.framework.BundleContext,org.apache.wicket.protocol.http.WebApplication,java.lang.String)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/mockito/Mockito/mock(java.lang.Class)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/mockito/Mockito/when(T)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#java/lang/Thread/Thread(java.lang.Runnable)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#java/util/concurrent/FutureTask/FutureTask(java.util.concurrent.Callable)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/DefaultPageMounter(java.lang.String,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/MountTest/mountAndUnmountPageInSeparateThread()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/apache/wicket/protocol/http/WebApplication/unmount(java.lang.String)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/apache/wicket/ThreadContext/setApplication(org.apache.wicket.Application)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/api/MountPointInfo/getPage()
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/osgi/util/tracker/ServiceTracker/addingService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/api/PageMounter/getMountPoints()
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/apache/wicket/ThreadContext/getApplication()
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/api/MountPointInfo/getPath()
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/trace(java.lang.String)
org/ops4j/pax/wicket/internal/PageMounterTracker/addingService(org.osgi.framework.ServiceReference)#org/apache/wicket/protocol/http/WebApplication/mountPage(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/protocol/http/WebSession/WebSession(org.apache.wicket.request.Request)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/protocol/http/WebApplication/unmount(java.lang.String)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/request/Url/parse(java.lang.CharSequence)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/ThreadContext/setSession(org.apache.wicket.Session)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/ops4j/pax/wicket/api/PageMounter/getMountPoints()
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/Session/exists()
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/osgi/util/tracker/ServiceTracker/removedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/ThreadContext/setApplication(org.apache.wicket.Application)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/ThreadContext/getApplication()
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/ops4j/pax/wicket/api/MountPointInfo/getPath()
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/ops4j/pax/wicket/api/MountPointInfo/getPage()
org/ops4j/pax/wicket/internal/PageMounterTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageMounter)#org/apache/wicket/mock/MockWebRequest/MockWebRequest(org.apache.wicket.request.Url)
org/ops4j/pax/wicket/internal/PageMounterTracker/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/PageMounterTracker/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/PageMounterTracker/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/PageMounterTracker/createFilter(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/PageMounterTracker/createFilter(org.osgi.framework.BundleContext,java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)#org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadXml(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilder/parse(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/ops4j/pax/wicket/spi/springdm/injection/spring/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/setNamespaceAware(boolean)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/resolveClass(java.lang.String)#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/resolveClass(java.lang.String)#org/osgi/framework/Bundle/loadClass(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/getResources(java.lang.String)#org/osgi/framework/Bundle/getResources(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/getResources(java.lang.String)#java/util/Collections/emptyList()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/getResources(java.lang.String)#java/util/List/iterator()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/getResources(java.lang.String)#org/ops4j/pax/wicket/internal/EnumerationAdapter/EnumerationAdapter(java.util.Enumeration)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/getResources(java.lang.String)#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/updated(java.util.Dictionary)#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/updated(java.util.Dictionary)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/updated(java.util.Dictionary)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/updated(java.util.Dictionary)#java/util/Hashtable/remove(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/getClassLoader()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#org/ops4j/pax/wicket/api/ConfigurableFilterConfig/putAllInitParameter(java.util.Map)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#javax/servlet/Filter/init(javax.servlet.FilterConfig)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/Class/newInstance()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/writeReplace()#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/ProxyReplacement(java.lang.String,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/spi/ProxyTargetLocator/locateProxyTarget()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isWriteReplaceMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isFinalizeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isEqualsMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/hashCode()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/writeReplace()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getDeclaringClass()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isToStringMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/spi/ReleasableProxyTarget/releaseTarget()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/getRealTarget(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/getObjectLocator()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/toString()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isHashCodeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/JdkHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/Integer(int)
org/ops4j/pax/wicket/samples/ds/internal/PAXWicketFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#org/ops4j/pax/wicket/samples/ds/internal/PAXWicketFilterFactory/createFilter(org/ops4j/pax/wicket/api/ConfigurableFilterConfig)/$anonymous1/()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintAutoPageMounterDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/stop(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()
org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/stop(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/dispose()
org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/start(org/osgi/framework/BundleContext)/$anonymous1/(org.osgi.framework.BundleContext,java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()
org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/DefaultWebApplicationFactory(org.osgi.framework.BundleContext,java.lang.Class,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/samples/plain/simple/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveNodeValude(org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Node/getNodeValue()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveNodeValude(org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveNodeValude(org.w3c.dom.Element,java.lang.String)#org/w3c/dom/Node/getChildNodes()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveNodeValude(org.w3c.dom.Element,java.lang.String)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#java/util/List/add(E)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#org/w3c/dom/Node/getChildNodes()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#org/w3c/dom/Node/getNodeValue()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#org/w3c/dom/NodeList/getLength()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveDestinationElements(org.w3c.dom.Element)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveNodeValude(org.w3c.dom.Element,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)#java/util/HashMap/HashMap()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)#org/w3c/dom/NodeList/getLength()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)#java/util/HashMap/HashMap()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)#org/w3c/dom/NodeList/getLength()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveNodeValude(org.w3c.dom.Element,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)#java/util/HashMap/HashMap()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)#org/w3c/dom/NodeList/getLength()
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)#org/w3c/dom/Element/getElementsByTagNameNS(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveInitParam(org.w3c.dom.Element)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/BlueprintPageFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/BlueprintPageFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/BlueprintParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.blueprint.injection.blueprint.AbstractBlueprintBeanDefinitionParser)
org/ops4j/pax/wicket/spi/blueprint/BlueprintPageFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceCollection/size()#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/getCurrentSize()
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceCollection/get(int)#java/util/ArrayList/ArrayList(java.util.Collection)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceCollection/get(int)#java/util/ArrayList/get(int)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceCollection/iterator()#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/iterator()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/buildServiceGraph(org.osgi.framework.ServiceReference[])
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#java/lang/Thread/sleep(long)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getBundleBySymbolicName(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/osgi/framework/Bundle/getState()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/osgi/framework/Bundle/getRegisteredServices()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getPaxWicketServiceBundle(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/osgi/framework/Bundle/stop()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/junit/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/junit/Assert/assertEquals(java.lang.String,long,long)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/testAppicationTracker()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/containsService(org.osgi.framework.ServiceReference[],java.lang.Class)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/mavenBundle()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/provision(org.ops4j.pax.exam.options.ProvisionOption<?>[])
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/exam/OptionUtils/combine(org.ops4j.pax.exam.Option[],org.ops4j.pax.exam.Option[])
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/groupId(java.lang.String)
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/versionAsInProject()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()
org/ops4j/pax/wicket/it/lifecycle/tracker/WicketApplicationTrackTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/artifactId(java.lang.String)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/getContainerClass()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/getApplicationContextFilter(java.lang.String)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/getContainerClass()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/BeanReactor/containsBean(Container)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()/$anonymous1/()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/createStrategy()
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/getApplicationContextFilter(java.lang.String)
org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintPageFactoryBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)
org/ops4j/pax/wicket/samples/navigation/internal/Activator/stop(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/dispose()
org/ops4j/pax/wicket/samples/navigation/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/DefaultWebApplicationFactory(org.osgi.framework.BundleContext,java.lang.Class,java.lang.String)
org/ops4j/pax/wicket/samples/navigation/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/util/List/size()
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/Filter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/util/List/get(int)
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/Servlet/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getInteger(java.lang.Object,int)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getInteger(java.lang.Object,int)#java/lang/Long/parseLong(java.lang.String)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getInteger(java.lang.Object,int)#java/lang/Number/longValue()
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFilter(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/api/FilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFilter(javax.servlet.ServletConfig)#javax/servlet/Filter/init(javax.servlet.FilterConfig)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFilter(javax.servlet.ServletConfig)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFilter(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/DefaultConfigurableFilterConfig(javax.servlet.ServletConfig)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFilter(javax.servlet.ServletConfig)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/setProperties(org.osgi.framework.ServiceReference)#java/lang/Object/toString()
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/setProperties(org.osgi.framework.ServiceReference)#java/lang/Boolean/parseBoolean(java.lang.String)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/setProperties(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getInteger(java.lang.Object,int)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/setProperties(org.osgi.framework.ServiceReference)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#javax/servlet/Filter/destroy()
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#java/util/Map/values()
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#java/util/Map/clear()
org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)#java/util/HashMap/put(K,V)
org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)#org/ops4j/pax/wicket/internal/GenericContext/normalizeMountPoint(java.lang.String)
org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/ServletDescriptor(javax.servlet.Servlet,java.lang.String,org.osgi.framework.Bundle,java.util.Map)
org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)#org/ops4j/pax/wicket/internal/HttpTracker/unregisterServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)
org/ops4j/pax/wicket/internal/HttpTracker/addServlet(java.lang.String,javax.servlet.Servlet,java.util.Map,org.osgi.framework.Bundle)#org/ops4j/pax/wicket/internal/HttpTracker/registerServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)
org/ops4j/pax/wicket/internal/HttpTracker/registerServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/register(org.osgi.service.http.HttpService)
org/ops4j/pax/wicket/internal/HttpTracker/registerServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/HttpTracker/registerServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/getAlias()
org/ops4j/pax/wicket/internal/HttpTracker/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/HttpTracker/registerServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)
org/ops4j/pax/wicket/internal/HttpTracker/addingService(org.osgi.framework.ServiceReference)#org/osgi/util/tracker/ServiceTracker/addingService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/HttpTracker/addingService(org.osgi.framework.ServiceReference)#java/util/HashMap/values()
org/ops4j/pax/wicket/internal/HttpTracker/removedService(org.osgi.framework.ServiceReference,org.osgi.service.http.HttpService)#org/osgi/util/tracker/ServiceTracker/removedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/internal/HttpTracker/removedService(org.osgi.framework.ServiceReference,org.osgi.service.http.HttpService)#org/ops4j/pax/wicket/internal/HttpTracker/unregisterServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)
org/ops4j/pax/wicket/internal/HttpTracker/removedService(org.osgi.framework.ServiceReference,org.osgi.service.http.HttpService)#java/util/HashMap/values()
org/ops4j/pax/wicket/internal/HttpTracker/unregisterServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/unregister()
org/ops4j/pax/wicket/internal/HttpTracker/unregisterServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/HttpTracker/unregisterServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)#org/ops4j/pax/wicket/internal/servlet/ServletDescriptor/getAlias()
org/ops4j/pax/wicket/internal/HttpTracker/removeServlet(java.lang.String)#org/ops4j/pax/wicket/internal/GenericContext/normalizeMountPoint(java.lang.String)
org/ops4j/pax/wicket/internal/HttpTracker/removeServlet(java.lang.String)#java/util/HashMap/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/HttpTracker/removeServlet(java.lang.String)#org/ops4j/pax/wicket/internal/HttpTracker/unregisterServletDescriptor(org.ops4j.pax.wicket.internal.servlet.ServletDescriptor)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/IteratorToEnumeration/nextElement()#java/util/Iterator/next()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/IteratorToEnumeration/hasMoreElements()#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/put(K,V)#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/put(K,V)#java/util/Dictionary/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/entrySet()#org/ops4j/pax/wicket/internal/util/DictionaryAsMap/entrySet()/$anonymous1/()
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/wrap(java.util.Dictionary)#org/ops4j/pax/wicket/internal/util/MapAsDictionary/getMap()
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/wrap(java.util.Dictionary)#org/ops4j/pax/wicket/internal/util/DictionaryAsMap/DictionaryAsMap(java.util.Dictionary)
org/ops4j/pax/wicket/internal/EnumerationAdapter/next()#java/util/Enumeration/nextElement()
org/ops4j/pax/wicket/internal/EnumerationAdapter/remove()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/internal/EnumerationAdapter/hasNext()#java/util/Enumeration/hasMoreElements()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleOnDestroy()#org/ops4j/pax/wicket/internal/DelegatingClassResolver/dispose()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleOnDestroy()#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleOnDestroy()#org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/dispose()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleOnDestroy()#org/ops4j/pax/wicket/internal/filter/FilterDelegator/stop()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleOnDestroy()#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/dispose()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isInitMethod(java.lang.reflect.Method)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isNewPageFactory(java.lang.reflect.Method)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isOnDestoryMethod(java.lang.reflect.Method)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleNewPageFactory()#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/initialize()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleNewPageFactory()#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/PaxWicketPageFactory(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isFinalizeMethod(java.lang.reflect.Method)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleOnDestroy()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isInitMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#net/sf/cglib/proxy/MethodProxy/invokeSuper(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isNewPageFactory(java.lang.reflect.Method)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isOnDestoryMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleNewPageFactory()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/isFinalizeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])#java/lang/reflect/Method/getParameterTypes()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])#java/lang/reflect/Method/getReturnType()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/checkSignature(java.lang.reflect.Method,java.lang.String,java.lang.Class,java.lang.Class<?>[])#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/intialize()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/DelegatingComponentInstanciationListener(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/apache/wicket/Application/getComponentInstantiationListeners()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/internal/PageMounterTracker/PageMounterTracker(org.osgi.framework.BundleContext,org.apache.wicket.protocol.http.WebApplication,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/apache/wicket/Application/getApplicationSettings()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/internal/filter/FilterDelegator/start()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getApplicationName()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/apache/wicket/Application/getFrameworkSettings()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/apache/wicket/util/listener/ListenerCollection/add(T)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/internal/DelegatingClassResolver/DelegatingClassResolver(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/apache/wicket/settings/IApplicationSettings/setClassResolver(org.apache.wicket.application.IClassResolver)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/internal/DelegatingClassResolver/intialize()
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacade/ComponentInstantiationListenerFacade(org.ops4j.pax.wicket.api.PaxWicketInjector)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/apache/wicket/settings/IFrameworkSettings/setSerializer(org.apache.wicket.serialize.ISerializer)
org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/WebApplicationWrapper/handleInit(org.apache.wicket.protocol.http.WebApplication)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializer/PaxWicketSerializer(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/buildServiceGraph(org.osgi.framework.ServiceReference[])#java/lang/StringBuilder/append(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/buildServiceGraph(org.osgi.framework.ServiceReference[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/buildServiceGraph(org.osgi.framework.ServiceReference[])#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/buildServiceGraph(org.osgi.framework.ServiceReference[])#java/lang/StringBuilder/toString()
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getBundleBySymbolicName(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/BundleContext/getBundles()
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getBundleBySymbolicName(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getBundleBySymbolicName(org.osgi.framework.BundleContext,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getPaxWicketServiceBundle(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getBundleBySymbolicName(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getPaxWicketServiceBundle(org.osgi.framework.BundleContext)#org/junit/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/containsService(org.osgi.framework.ServiceReference[],java.lang.Class)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/containsService(org.osgi.framework.ServiceReference[],java.lang.Class)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/containsService(org.osgi.framework.ServiceReference[],java.lang.Class)#java/lang/Class/getName()
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/options/FrameworkPropertyOption/value(java.lang.Object)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/groupId(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/options/SystemPropertyOption/value(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/artifactId(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/versionAsInProject()
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/CoreOptions/systemProperty(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/CoreOptions/mavenBundle()
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/CoreOptions/provision(org.ops4j.pax.exam.options.ProvisionOption<?>[])
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/CoreOptions/frameworkProperty(java.lang.String)
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/CoreOptions/options(org.ops4j.pax.exam.Option[])
org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()#org/ops4j/pax/exam/CoreOptions/junitBundles()
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacade/onInstantiation(org.apache.wicket.Component)
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/mockito/Mockito/mock(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/ops4j/pax/wicket/api/PaxWicketInjector/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacade/ComponentInstantiationListenerFacade(org.ops4j.pax.wicket.api.PaxWicketInjector)
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getFields(java.lang.Class)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#javax/inject/Named/value()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#java/lang/String/isEmpty()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/SpringTestProxyTargetLocator(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java/util/concurrent/TimeUnit)/$anonymous1/()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#java/util/concurrent/TimeUnit/toMillis(long)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#org/osgi/util/tracker/ServiceTracker/waitForService(long)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#java/util/concurrent/TimeoutException/TimeoutException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)#org/osgi/util/tracker/ServiceTracker/ServiceTracker(org.osgi.framework.BundleContext,org.osgi.framework.Filter,org.osgi.util.tracker.ServiceTrackerCustomizer)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()#java/lang/Throwable/getMessage()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()#org/osgi/framework/BundleContext/getAllServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/ReleasableProxyTargetImplementation(java.lang.Object,org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget()#java/util/Arrays/sort(java.lang.Object[])
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/getFilterString(org.osgi.framework.Filter)#org/osgi/framework/Filter/toString()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getApplicationName()#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/setApplicationName(java.lang.String)#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/setApplicationName(java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getPriority()#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getApplicationName()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#java/lang/Class/getSimpleName()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getPriority()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#java/lang/Object/getClass()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/setPriority(java.lang.Integer)#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/setPriority(java.lang.Integer)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getApplicationName()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#java/lang/Class/getSimpleName()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#org/osgi/framework/BundleContext/registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getPriority()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#java/lang/Object/getClass()
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/updated(java.util.Dictionary)#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/updated(java.util.Dictionary)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/updated(java.util.Dictionary)#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/setApplicationName(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractFilterFactory/updated(java.util.Dictionary)#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/setPriority(java.lang.Integer)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getID()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/Class/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForMountPointAnnotations()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getID()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/api/PaxWicketMountPoint/mountPoint()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/ArrayList/add(E)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/api/support/DefaultPageMounter/DefaultPageMounter(java.lang.String,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/stop()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/stop()#java/util/ArrayList/ArrayList(java.util.Collection)
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/stop()#java/util/Map/values()
org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/stop()#java/util/Map/clear()
org/ops4j/pax/wicket/spi/support/ComponentInstantiationListenerFacade/onInstantiation(org.apache.wicket.Component)#org/ops4j/pax/wicket/api/PaxWicketInjector/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/spi/support/ComponentInstantiationListenerFacade/onInstantiation(org.apache.wicket.Component)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/AuthenticatedToken/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/AuthenticatedToken/equals(java.lang.Object)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/AuthenticatedToken/hashCode()#java/lang/String/hashCode()
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()#java/util/Hashtable/Hashtable()
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/setApplicationName(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/setMountPoint(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/dispose()#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/dispose()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/samples/blueprint/filter/internal/IAmASysoutFilter/init(javax.servlet.FilterConfig)#java/io/PrintStream/println(java.lang.String)
org/ops4j/pax/wicket/samples/blueprint/filter/internal/IAmASysoutFilter/destroy()#java/io/PrintStream/println(java.lang.String)
org/ops4j/pax/wicket/samples/blueprint/filter/internal/IAmASysoutFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#java/io/PrintStream/println(java.lang.String)
org/ops4j/pax/wicket/samples/blueprint/applicationFactory/internal/WicketApplicationFactory/onInstantiation(org.ops4j.pax.wicket.samples.blueprint.applicationFactory.internal.WicketApplication)#org/ops4j/pax/wicket/samples/blueprint/applicationFactory/internal/WicketApplication/setApplicationName(java.lang.String)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameterNames()#java/util/Collections/enumeration(java.util.Collection)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameterNames()#java/util/Collections/list(java.util.Enumeration)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameterNames()#java/util/List/addAll(java.util.Collection)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameterNames()#java/util/Map/keySet()
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameterNames()#javax/servlet/ServletConfig/getInitParameterNames()
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/putInitParameter(java.lang.String,java.lang.String)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameter(java.lang.String)#javax/servlet/ServletConfig/getInitParameter(java.lang.String)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameter(java.lang.String)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameter(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/putAllInitParameter(java.util.Map)#java/util/Map/putAll(java.util.Map)
org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getServletContext()#javax/servlet/ServletConfig/getServletContext()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()#org/apache/wicket/Application/get()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()/$anonymous2/()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()/$anonymous1/()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/SpringTestProxyTargetLocator/locateProxyTarget()#org/apache/wicket/Application/getMetaData(org.apache.wicket.MetaDataKey)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveOverwriteElements(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/getPageClass()#org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/getPageClass()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/stop()#org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/start()#org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/start()#org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/InternalPageFactory(org.osgi.framework.BundleContext,java.lang.String,java.lang.String,java.lang.String,java.lang.Class,java.util.Map,java.lang.String)
org/ops4j/pax/wicket/samples/mixed/component/internal/MyPanelProvider/getComponent(java.lang.String)#org/ops4j/pax/wicket/samples/mixed/component/internal/MyPanel/MyPanel(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/stop()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/stop()#java/util/List/clear()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/lang/StringBuilder/append(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/osgi/framework/Bundle/findEntries(java.lang.String,java.lang.String,boolean)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/osgi/framework/Bundle/loadClass(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/lang/Class/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/slf4j/Logger/error(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/lang/StringBuilder/StringBuilder()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/util/List/add(E)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/util/Enumeration/hasMoreElements()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/ops4j/pax/wicket/api/PaxWicketMountPoint/mountPoint()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/util/Enumeration/nextElement()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#java/lang/StringBuilder/toString()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/DefaultPageMounter(java.lang.String,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/start()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/net/URI/URI(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/net/URL/toURI()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/net/URI/getPath()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/net/URL/getProtocol()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#org/osgi/framework/Bundle/getLocation()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/net/URI/getSchemeSpecificPart()
org/ops4j/pax/wicket/spi/support/BundleScanningMountPointProviderDecorator/calculateClassName(java.net.URL)#java/lang/String/startsWith(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/add(org.ops4j.pax.wicket.api.PageFactory)#org/ops4j/pax/wicket/api/PageFactory/getPageClass()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/add(org.ops4j.pax.wicket.api.PageFactory)#java/util/HashMap/put(K,V)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/add(org.ops4j.pax.wicket.api.PageFactory)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/remove(org.ops4j.pax.wicket.api.PageFactory)#org/ops4j/pax/wicket/api/PageFactory/getPageClass()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/remove(org.ops4j.pax.wicket.api.PageFactory)#java/util/HashMap/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/remove(org.ops4j.pax.wicket.api.PageFactory)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)#org/apache/wicket/session/DefaultPageFactory/DefaultPageFactory()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)#org/ops4j/pax/wicket/api/PageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/getFactory(java.lang.Class)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)#org/apache/wicket/session/DefaultPageFactory/newPage(java.lang.Class,org.apache.wicket.request.mapper.parameter.PageParameters)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/initialize()#org/ops4j/pax/wicket/internal/PaxWicketPageTracker/PaxWicketPageTracker(org.osgi.framework.BundleContext,java.lang.String,org.ops4j.pax.wicket.internal.PaxWicketPageFactory)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/initialize()#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/isBookmarkable(java.lang.Class)#org/apache/wicket/session/DefaultPageFactory/isBookmarkable(java.lang.Class)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/isBookmarkable(java.lang.Class)#org/apache/wicket/session/DefaultPageFactory/DefaultPageFactory()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/getFactory(java.lang.Class)#java/util/HashMap/get(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class)#org/apache/wicket/session/DefaultPageFactory/newPage(java.lang.Class)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class)#org/apache/wicket/session/DefaultPageFactory/DefaultPageFactory()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class)#org/apache/wicket/request/mapper/parameter/PageParameters/PageParameters()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class)#org/ops4j/pax/wicket/api/PageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/newPage(java.lang.Class)#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/getFactory(java.lang.Class)
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/dispose()#java/util/HashMap/clear()
org/ops4j/pax/wicket/internal/PaxWicketPageFactory/dispose()#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/inject(java.lang.Object,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/inject(java.lang.Object,java.lang.Class)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/updated(java.util.Dictionary)#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/updated(java.util.Dictionary)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/updated(java.util.Dictionary)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionResolver/updated(java.util.Dictionary)#java/util/Hashtable/remove(java.lang.Object)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/apache/wicket/application/IClassResolver/resolveClass(java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#java/lang/Class/getName()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/junit/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/junit/Assert/assertEquals(long,long)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/isApplicationNameKeyExists(org.osgi.framework.ServiceReference)#org/osgi/framework/ServiceReference/getPropertyKeys()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/isApplicationNameKeyExists(org.osgi.framework.ServiceReference)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/getLibraryClassResolverReference()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/getLibraryClassResolverReference()#java/lang/Class/getName()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/getLibraryClassResolverReference()#org/junit/Assert/assertEquals(long,long)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/getLibraryClassResolverReference()#org/junit/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/CoreOptions/mavenBundle()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/CoreOptions/provision(org.ops4j.pax.exam.options.ProvisionOption<?>[])
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/OptionUtils/combine(org.ops4j.pax.exam.Option[],org.ops4j.pax.exam.Option[])
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/CoreOptions/provision(java.io.InputStream[])
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/tinybundles/core/TinyBundle/build(org.ops4j.pax.tinybundles.core.BuildStrategy)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/tinybundles/core/TinyBundle/set(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/tinybundles/core/TinyBundles/bundle()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/tinybundles/core/TinyBundle/add(java.lang.Class)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/versionAsInProject()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/tinybundles/core/TinyBundles/withBnd()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/groupId(java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/provisionSimpleLibraries()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/artifactId(java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/framework/Bundle/getLocation()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/framework/ServiceReference/getBundle()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/service/cm/Configuration/delete()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/getLibraryClassResolverReference()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/framework/BundleContext/getServiceReference(java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/junit/Assert/assertTrue(boolean)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#java/lang/Class/getName()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/service/cm/Configuration/update(java.util.Dictionary)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#java/util/Hashtable/Hashtable()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/service/cm/ConfigurationAdmin/getConfiguration(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/osgi/service/cm/Configuration/getProperties()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#java/lang/Thread/sleep(long)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/junit/Assert/assertFalse(boolean)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/isApplicationNameKeyExists(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationViaConfigAdmin()#org/junit/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/junit/Assert/assertFalse(boolean)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/getLibraryClassResolverReference()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/junit/Assert/assertTrue(boolean)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/osgi/service/cm/ManagedService/updated(java.util.Dictionary)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#java/util/Hashtable/Hashtable()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/validateThatClassResolverIsExposedToAbcAndDef()
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/testPrivateLibrariesByUpdatingConfigurationByInvokingDirectly()#org/ops4j/pax/wicket/it/classResolver/ClassResolverByPidTest/isApplicationNameKeyExists(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/addBundleListener(org.osgi.framework.BundleListener)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/BundleTrackerAggregator(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTrackerCustomizer,org.ops4j.pax.wicket.internal.util.ServiceTrackerAggregatorReadyChildren<ServiceType>[])
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/extender/PaxWicketBundleListener/PaxWicketBundleListener(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.internal.extender.BundleDelegatingExtensionTracker)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/OSGiServiceRegistryProxyTargetLocatorFactory()
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/util/tracker/ServiceTracker/ServiceTracker(org.osgi.framework.BundleContext,java.lang.Class,org.osgi.util.tracker.ServiceTrackerCustomizer)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/util/tracker/BundleTracker/BundleTracker(org.osgi.framework.BundleContext,int,org.osgi.util.tracker.BundleTrackerCustomizer)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/util/tracker/BundleTracker/open()
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/PaxWicketAppFactoryTracker/PaxWicketAppFactoryTracker(org.osgi.framework.BundleContext,org.ops4j.pax.wicket.internal.HttpTracker)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/extender/BundleImportExtender/BundleImportExtender(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/HttpTracker/HttpTracker(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/util/tracker/ServiceTracker/open(boolean)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/BundleDelegatingExtensionTracker(org.osgi.framework.BundleContext,org.osgi.util.tracker.ServiceTracker)
org/ops4j/pax/wicket/internal/Activator/start(org.osgi.framework.BundleContext)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/Activator/getBundleContextByBundleId(long)#org/osgi/framework/BundleContext/getBundle(long)
org/ops4j/pax/wicket/internal/Activator/getBundleContextByBundleId(long)#org/osgi/framework/Bundle/getBundleContext()
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/util/tracker/BundleTracker/close()
org/ops4j/pax/wicket/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/removeBundleListener(org.osgi.framework.BundleListener)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/flush()#java/io/ObjectOutputStream/flush()
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/writeObjectOverride(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/writeObjectOverride(java/lang/Object)/$anonymous1/(java.io.NotSerializableException)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/writeObjectOverride(java.lang.Object)#org/apache/wicket/core/util/objects/checker/CheckingObjectOutputStream/isAvailable()
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/writeObjectOverride(java.lang.Object)#java/lang/Throwable/getMessage()
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/writeObjectOverride(java.lang.Object)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/writeObjectOverride(java.lang.Object)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/close()#java/io/ObjectOutputStream/close()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/WicketFilterCallback/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/WicketFilterCallback/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/reflect/InvocationTargetException/getTargetException()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/WicketFilterCallback/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/WicketFilterCallback/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/reflect/Method/getName()
org/ops4j/pax/wicket/internal/servlet/PAXWicketServlet/WicketFilterCallback/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#net/sf/cglib/proxy/MethodProxy/invokeSuper(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/BundleEvent/getType()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/BundleEvent/getBundle()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/bundleChanged(org.osgi.framework.BundleEvent)#org/osgi/framework/Bundle/getBundleId()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/bundleChanged(org.osgi.framework.BundleEvent)#java/util/Set/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/osgi/framework/hooks/weaving/WovenClass/getDynamicImports()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#java/util/List/addAll(java.util.Collection)
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#java/util/Set/contains(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/osgi/framework/hooks/weaving/WovenClass/getBundleWiring()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForImportEnhancements()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/osgi/framework/Bundle/getBundleId()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#java/util/Set/add(E)
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/osgi/framework/BundleReference/getBundle()
org/ops4j/pax/wicket/internal/extender/BundleImportExtender/weave(org.osgi.framework.hooks.weaving.WovenClass)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle.ExtendedBundleContext,org.osgi.framework.Bundle)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/getServletConfig()#javax/servlet/Servlet/getServletConfig()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/Servlet/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/PAXWicketFilterChain(java.util.List,javax.servlet.Servlet)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/util/Arrays/asList(T[])
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/newProxyRequest(javax.servlet.http.HttpServletRequest)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getFilterDelegator()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/service(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/isProxied(javax.servlet.http.HttpServletRequest)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/readProperties(java.lang.String,java.lang.ClassLoader[])#javax/servlet/ServletException/ServletException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/readProperties(java.lang.String,java.lang.ClassLoader[])#java/util/Properties/Properties()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/readProperties(java.lang.String,java.lang.ClassLoader[])#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/readProperties(java.lang.String,java.lang.ClassLoader[])#java/util/Properties/load(java.io.InputStream)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/newProxyRequest(javax.servlet.http.HttpServletRequest)#org/ops4j/pax/wicket/internal/servlet/ServletRequestInvocationHandler/ServletRequestInvocationHandler(javax.servlet.http.HttpServletRequest,java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/newProxyRequest(javax.servlet.http.HttpServletRequest)#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class<?>[],java.lang.reflect.InvocationHandler)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/newProxyRequest(javax.servlet.http.HttpServletRequest)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getMountPoint()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/newProxyRequest(javax.servlet.http.HttpServletRequest)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/newProxyRequest(javax.servlet.http.HttpServletRequest)#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/isProxied(javax.servlet.http.HttpServletRequest)#java/lang/reflect/Proxy/isProxyClass(java.lang.Class)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/isProxied(javax.servlet.http.HttpServletRequest)#java/lang/reflect/Proxy/getInvocationHandler(java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/isProxied(javax.servlet.http.HttpServletRequest)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/getServletInfo()#javax/servlet/Servlet/getServletInfo()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#javax/servlet/Filter/init(javax.servlet.FilterConfig)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Class/newInstance()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/StringBuilder/append(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#javax/servlet/Servlet/init(javax.servlet.ServletConfig)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#javax/servlet/ServletException/ServletException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/slf4j/Logger/info(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/util/List/size()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/readProperties(java.lang.String,java.lang.ClassLoader[])
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/api/SuperFilter/filter()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/StringBuilder/StringBuilder()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/putInitParameter(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/api/SuperFilter/initParameter()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/DefaultConfigurableFilterConfig(java.lang.String,javax.servlet.ServletConfig)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameter(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getSuperFilterList()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/DefaultConfigurableFilterConfig/getInitParameterNames()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/util/Properties/stringPropertyNames()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Object/toString()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/util/Properties/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/String/length()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/slf4j/Logger/info(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/util/List/get(int)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/StringBuilder/append(java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/util/Enumeration/hasMoreElements()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/slf4j/Logger/isInfoEnabled()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#java/util/Enumeration/nextElement()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/init(javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/PaxWicketApplicationFactory/getWebApplicationFactory()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/destroy()#javax/servlet/Filter/destroy()
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/destroy()#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/servlet/ServletCallInterceptor/destroy()#javax/servlet/Servlet/destroy()
org/ops4j/pax/wicket/spi/springdm/injection/spring/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/mockito/Mockito/mock(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/springdm/injection/spring/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/ops4j/pax/wicket/api/PaxWicketInjector/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/ops4j/pax/wicket/spi/support/ComponentInstantiationListenerFacade/onInstantiation(org.apache.wicket.Component)
org/ops4j/pax/wicket/spi/springdm/injection/spring/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#java/lang/Object/getClass()
org/ops4j/pax/wicket/spi/springdm/injection/spring/ComponentInstantiationListenerFacadeTest/testCallToFacade_shouldBeForwardedToRealClass()#org/ops4j/pax/wicket/spi/support/ComponentInstantiationListenerFacade/ComponentInstantiationListenerFacade(org.ops4j.pax.wicket.api.PaxWicketInjector)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/ProxyTargetLocator/locateProxyTarget()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isWriteReplaceMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isFinalizeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Object/hashCode()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isToStringMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/spi/ReleasableProxyTarget/releaseTarget()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/getRealTarget(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Object/toString()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#net/sf/cglib/proxy/MethodProxy/invoke(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isHashCodeMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/Integer/Integer(int)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/isEqualsMethod(java.lang.reflect.Method)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/writeReplace()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/getObjectLocator()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)#java/lang/reflect/Method/getDeclaringClass()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/CGLibInterceptor/writeReplace()#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/ProxyReplacement(java.lang.String,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/setInitMethodName(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/prepareInjection(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/setDestroyMethodName(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/setLazyInit(boolean)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/xml/AbstractSingleBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyReferenceFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyReferenceFromElement(java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyReference(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/springframework/beans/factory/support/BeanDefinitionBuilder/addPropertyValue(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/AbstractSpringBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/modifiedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/removedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/modifiedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/modifiedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/modifiedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/modifiedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/modifiedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#java/lang/Class/isArray()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/removedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#org/osgi/util/tracker/ServiceTracker/removedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/removedService(org.osgi.framework.ServiceReference,org.apache.wicket.application.IClassResolver)#java/util/List/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/addingService(org.osgi.framework.ServiceReference)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/addingService(org.osgi.framework.ServiceReference)#org/osgi/util/tracker/ServiceTracker/addingService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/Class/getSuperclass()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/reflect/Field/toGenericString()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/util/Set/add(E)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/util/HashSet/HashSet()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/lang/reflect/Field/toGenericString()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/util/Set/add(E)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/util/HashSet/HashSet()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedOneLevel(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/checkAccessabilityOfField(java.lang.reflect.Field)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/checkAccessabilityOfField(java.lang.reflect.Field)#java/lang/reflect/AccessibleObject/isAccessible()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/util/List/add(E)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/isBoundaryClass(java.lang.Class)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/lang/Class/getSuperclass()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/util/List/add(E)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getBeanType(java.lang.reflect.Field)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/checkAccessabilityOfField(java.lang.reflect.Field)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#org/apache/wicket/Application/getApplicationSettings()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#org/apache/wicket/settings/IApplicationSettings/getClassResolver()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#org/apache/wicket/application/IClassResolver/resolveClass(java.lang.String)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#org/ops4j/pax/wicket/spi/ProxyTargetLocator/getParent()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#java/io/InvalidClassException/InvalidClassException(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#org/apache/wicket/protocol/http/WebApplication/get()
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/ProxyReplacement/readResolve()#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetBeanType_shouldReturnType()#org/hamcrest/CoreMatchers/is(T)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetBeanType_shouldReturnType()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/getBeanType(java.lang.reflect.Field)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetBeanType_shouldReturnType()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/getFields(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetBeanType_shouldReturnType()#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetBeanType_shouldReturnType()#java/util/List/get(int)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetBeanType_shouldReturnType()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetFields_shouldReturnBothServiceFields()#org/hamcrest/CoreMatchers/is(T)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetFields_shouldReturnBothServiceFields()#java/lang/reflect/Field/getName()
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetFields_shouldReturnBothServiceFields()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/getFields(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetFields_shouldReturnBothServiceFields()#java/util/List/size()
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetFields_shouldReturnBothServiceFields()#java/util/List/get(int)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testgetFields_shouldReturnBothServiceFields()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/mockito/Mockito/mock(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/TestObject/getTestService()
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/getFields(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/hamcrest/CoreMatchers/sameInstance(T)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/TestObject/TestObject()
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#java/util/List/get(int)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testsetField_shouldSetFieldValue()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testdoesComponentContainPaxWicketBeanAnnotatedFields_shouldReturnTrue()#org/hamcrest/CoreMatchers/is(T)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testdoesComponentContainPaxWicketBeanAnnotatedFields_shouldReturnTrue()#java/util/Set/size()
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testdoesComponentContainPaxWicketBeanAnnotatedFields_shouldReturnTrue()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/testdoesComponentContainPaxWicketBeanAnnotatedFields_shouldReturnTrue()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/setUp()#org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/PaxWicketTestInjector()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#org/junit/Assert/assertTrue(java.lang.String,boolean)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#com/gargoylesoftware/htmlunit/WebClient/closeAllWindows()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#org/junit/Assert/assertTrue(boolean)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#com/gargoylesoftware/htmlunit/html/DomNode/asText()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#com/gargoylesoftware/htmlunit/WebClient/getPage(java.lang.String)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#org/ops4j/pax/wicket/it/samples/SampleWebUiTest/EchoServiceImplementation/EchoServiceImplementation()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#org/junit/Assert/assertNotNull(java.lang.Object)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#com/gargoylesoftware/htmlunit/WebClient/WebClient()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/testIfAllExamplesWhereLoaded_shouldBeAbleToAccessThemAll()#java/lang/String/contains(java.lang.CharSequence)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/mavenBundle()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/provision(org.ops4j.pax.exam.options.ProvisionOption<?>[])
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/exam/OptionUtils/combine(org.ops4j.pax.exam.Option[],org.ops4j.pax.exam.Option[])
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/groupId(java.lang.String)
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/versionAsInProject()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()
org/ops4j/pax/wicket/it/samples/SampleWebUiTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/artifactId(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/SpringParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.springdm.injection.spring.AbstractSpringBeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParser/SpringInjectionResolverDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParser/getBeanClass(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParser/SpringInjectionResolverDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/it/classResolver/simpleLibraries/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/register()
org/ops4j/pax/wicket/it/classResolver/simpleLibraries/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolverHelper(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/it/classResolver/simpleLibraries/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setServicePid(java.lang.String)
org/ops4j/pax/wicket/it/classResolver/simpleLibraries/internal/Activator/stop(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/dispose()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)#org/apache/aries/blueprint/ParserContext/createMetadata(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)#org/apache/aries/blueprint/mutable/MutableValueMetadata/setStringValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/ParserContext/createMetadata(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableComponentMetadata/setActivation(int)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableComponentMetadata/setId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setRuntimeClass(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setInitMethod(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setDestroyMethod(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/getId(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setScope(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)#org/apache/aries/blueprint/ParserContext/createMetadata(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)#org/apache/aries/blueprint/mutable/MutableRefMetadata/setComponentId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/getId(org.w3c.dom.Element)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForList(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.List)#org/apache/aries/blueprint/ParserContext/createMetadata(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForList(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.List)#org/apache/aries/blueprint/mutable/MutableCollectionMetadata/addValue(org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForList(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.List)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForList(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.List)#org/apache/aries/blueprint/mutable/MutableCollectionMetadata/setCollectionClass(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForList(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.List)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#org/apache/aries/blueprint/ParserContext/createMetadata(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#java/util/Map/Entry/getValue()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#org/apache/aries/blueprint/mutable/MutableMapMetadata/addEntry(org.osgi.service.blueprint.reflect.NonNullMetadata,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#java/util/Map/Entry/getKey()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)#java/util/Map/entrySet()
org/ops4j/pax/wicket/spi/springdm/injection/spring/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/spi/springdm/injection/spring/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringDMProxyTargetLocatorFactory/SpringDMProxyTargetLocatorFactory()
org/ops4j/pax/wicket/spi/springdm/injection/spring/Activator/start(org.osgi.framework.BundleContext)#org/slf4j/Logger/info(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/spi/springdm/injection/spring/Activator/stop(org.osgi.framework.BundleContext)#org/slf4j/Logger/info(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/start()#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/start()#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/start()#java/util/Hashtable/Hashtable()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getBundleContext()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/BundleAnalysingComponentInstantiationListener(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTracker)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/stop()#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/stop()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#java/util/Map/values()
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/BlueprintBeanReactor/containsBean(org.osgi.service.blueprint.container.BlueprintContainer)#org/osgi/service/blueprint/container/BlueprintContainer/getComponentInstance(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/BlueprintBeanReactor/createBean(org.osgi.service.blueprint.container.BlueprintContainer)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/SpringParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.springdm.injection.spring.AbstractSpringBeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParser/SpringClassResolverDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParser/getBeanClass(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParser/SpringClassResolverDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveNonExistingInjectionHolder_shouldThrowIllegalStateException()#org/ops4j/pax/wicket/api/InjectorHolder/getInjector()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveNonExistingInjectionHolder_shouldThrowIllegalStateException()#org/apache/wicket/util/tester/WicketTester/WicketTester()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/apache/wicket/util/tester/WicketTester/WicketTester(org.apache.wicket.protocol.http.WebApplication)
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()/$anonymous2/()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()/$anonymous1/()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/apache/wicket/protocol/http/WebApplication/getApplicationKey()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/junit/Assert/assertSame(java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/ops4j/pax/wicket/api/InjectorHolder/getInjector()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/apache/wicket/util/tester/BaseWicketTester/getApplication()
org/ops4j/pax/wicket/api/InjectorHolderTest/testRetrieveInjectorAfterSettingIt_shouldSucceed()#org/ops4j/pax/wicket/api/InjectorHolder/setInjector(java.lang.String,org.ops4j.pax.wicket.api.PaxWicketInjector)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/getBeanName()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()/$anonymous3/()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()/$anonymous2/()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#java/lang/String/isEmpty()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()/$anonymous1/()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/createStrategy()#java/util/Map/size()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/getApplicationContextFilter(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/getApplicationContextFilter(java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/Activator/start(org.osgi.framework.BundleContext)#org/slf4j/Logger/info(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/BlueprintProxyTargetLocatorFactory()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/Activator/stop(org.osgi.framework.BundleContext)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getClassLoader()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/stop()#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/stop()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#org/osgi/framework/Bundle/loadClass(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#java/util/Map/values()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/resolveClass(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#java/util/ArrayList/iterator()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#org/slf4j/Logger/warn(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#java/util/Map/values()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#java/util/Enumeration/hasMoreElements()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#java/util/ArrayList/add(E)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#java/util/Enumeration/nextElement()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#org/osgi/framework/Bundle/getResources(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/getResources(java.lang.String)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/start()#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/start()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/start()#org/osgi/framework/BundleContext/registerService(java.lang.Class,S,java.util.Dictionary)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/start()#java/util/Hashtable/Hashtable()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)#java/lang/reflect/Field/getName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)#java/lang/reflect/Field/getGenericType()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/reflect/Field/getName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/osgi/util/tracker/ServiceTracker/waitForService(long)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/osgi/util/tracker/ServiceTracker/getServices(T[])
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/ops4j/pax/wicket/spi/ProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/util/List/size()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/ops4j/pax/wicket/spi/ProxyTargetLocatorFactory/getName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/ops4j/pax/wicket/spi/ProxyTargetLocatorFactory/DelayableProxyTargetLocatorFactory/createFutureProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/util/ArrayList/ArrayList(int)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/util/concurrent/TimeUnit/toMillis(long)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/util/List/isEmpty()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/String/length()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/toInjectNameString(org.ops4j.pax.wicket.spi.ProxyTargetLocatorFactory[])
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)#java/util/List/get(int)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectFuture(java.lang.reflect.Field,java.lang.Class,java.util.Map,java.lang.String)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectFuture(java.lang.reflect.Field,java.lang.Class,java.util.Map,java.lang.String)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectFuture(java.lang.reflect.Field,java.lang.Class,java.util.Map,java.lang.String)#org/ops4j/pax/wicket/internal/injection/InjectionFuture/create(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/toInjectNameString(org.ops4j.pax.wicket.spi.ProxyTargetLocatorFactory[])#java/lang/StringBuilder/append(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/toInjectNameString(org.ops4j.pax.wicket.spi.ProxyTargetLocatorFactory[])#java/lang/StringBuilder/StringBuilder()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/toInjectNameString(org.ops4j.pax.wicket.spi.ProxyTargetLocatorFactory[])#java/lang/StringBuilder/append(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getSingleLevelOfFields(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/isPrimitive()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/createProxyTargetLocator(java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map,java.lang.String,boolean)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectFuture(java.lang.reflect.Field,java.lang.Class,java.util.Map,java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/spi/OverwriteProxy/getOverwrites()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#net/sf/cglib/proxy/Factory/getCallback(int)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/AbstractPaxWicketInjector/getBeanType(java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/getSuperclass()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/util/proxy/LazyInitProxyFactory/createProxy(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/String/length()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/api/PaxWicketBeanInjectionSource/value()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/spi/OverwriteProxy/getInjectionSource()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/String/isEmpty()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/inject(java.lang.Object,java.lang.Class)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectBundleContext(java.lang.Class,java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectBundleContext(java.lang.Class,java.lang.reflect.Field)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectBundleContext(java.lang.Class,java.lang.reflect.Field)#org/osgi/framework/Bundle/getBundleContext()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectBundleContext(java.lang.Class,java.lang.reflect.Field)#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectBundleContext(java.lang.Class,java.lang.reflect.Field)#org/osgi/framework/BundleReference/getBundle()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#java/lang/String/matches(java.lang.String)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/injectionPossible(java.lang.Class)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/SpringParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.springdm.injection.spring.AbstractSpringBeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/SpringApplicationBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/getBeanClass(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/SpringApplicationBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/getApplicationContextFilter(java.lang.String)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/getContainerClass()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/hasApplicationContext()#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/BeanReactor/containsBean(Container)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Thread/setContextClassLoader(java.lang.ClassLoader)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/getApplicationContextFilter(java.lang.String)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Thread/currentThread()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/getContainerClass()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/Thread/getContextClassLoader()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()/$anonymous1/()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/createStrategy()
org/ops4j/pax/wicket/internal/injection/AbstractProxyTargetLocator/locateProxyTarget()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterator/next()#java/util/Iterator/next()
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterator/next()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterator/next()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterator/hasNext()#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterator/remove()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/KeyEntry/setValue(V)#java/util/Dictionary/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/KeyEntry/setValue(V)#org/ops4j/pax/wicket/internal/util/DictionaryAsMap/put(K,V)
org/ops4j/pax/wicket/internal/util/DictionaryAsMap/KeyEntry/getValue()#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/onInstantiation(org.apache.wicket.Component)#org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketTestBeanInjector/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/onInstantiation(org.apache.wicket.Component)#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/registerForAdditionalName(java.lang.String)#org/ops4j/pax/wicket/api/InjectorHolder/setInjector(java.lang.String,org.ops4j.pax.wicket.api.PaxWicketInjector)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/dispose()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/dispose()#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getClassLoader()#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/createFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/createFilter(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/intialize()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/intialize()#org/ops4j/pax/wicket/internal/DelegatingClassResolver/ClassResolverTracker/ClassResolverTracker(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/intialize()#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/resolveClass(java.lang.String)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/resolveClass(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/DelegatingClassResolver/resolveClass(java.lang.String)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/resolveClass(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/resolveClass(java.lang.String)#java/util/List/size()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/resolveClass(java.lang.String)#org/apache/wicket/application/IClassResolver/resolveClass(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#java/util/ArrayList/iterator()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#java/util/Iterator/next()
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#org/apache/wicket/application/IClassResolver/getResources(java.lang.String)
org/ops4j/pax/wicket/internal/DelegatingClassResolver/getResources(java.lang.String)#java/util/ArrayList/add(E)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/setPageId(java.lang.String)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/setPageId(java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotEmpty(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/getPageName()#java/util/Hashtable/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/getApplicationName()#java/util/Hashtable/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/setPageName(java.lang.String)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/setPageName(java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotEmpty(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()#java/lang/Class/getSimpleName()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()#java/lang/Object/getClass()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/dispose()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/setApplicationName(java.lang.String)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/setApplicationName(java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotEmpty(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/updated(java.util.Dictionary)#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/updated(java.util.Dictionary)#org/ops4j/pax/wicket/api/support/AbstractPageFactory/setApplicationName(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/updated(java.util.Dictionary)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/updated(java.util.Dictionary)#org/ops4j/pax/wicket/api/support/AbstractPageFactory/setPageName(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#java/lang/Class/getSimpleName()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#java/lang/Class/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/osgi/framework/BundleContext/registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/ops4j/pax/wicket/api/support/AbstractPageFactory/getApplicationName()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#java/lang/Object/getClass()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/ops4j/pax/wicket/api/PaxWicketMountPoint/mountPoint()
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/DefaultPageMounter(java.lang.String,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/api/support/AbstractPageFactory/register()#org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/util/ServiceTrackerAggregatorReadyChildren/addingService(org.osgi.framework.ServiceReference,ServiceType)
org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/addingService(org.osgi.framework.ServiceReference)#org/osgi/util/tracker/ServiceTracker/addingService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/modifiedService(org.osgi.framework.ServiceReference,ServiceType)#org/ops4j/pax/wicket/internal/util/ServiceTrackerAggregatorReadyChildren/addingService(org.osgi.framework.ServiceReference,ServiceType)
org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/modifiedService(org.osgi.framework.ServiceReference,ServiceType)#org/osgi/util/tracker/ServiceTracker/modifiedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/removedService(org.osgi.framework.ServiceReference,ServiceType)#org/osgi/util/tracker/ServiceTracker/removedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/internal/util/BundleTrackerAggregator/removedService(org.osgi.framework.ServiceReference,ServiceType)#org/ops4j/pax/wicket/internal/util/ServiceTrackerAggregatorReadyChildren/removedService(org.osgi.framework.ServiceReference,ServiceType)
org/ops4j/pax/wicket/util/serialization/ReplaceBundle/getBundle()#org/osgi/framework/BundleContext/getBundle(long)
org/ops4j/pax/wicket/util/serialization/ReplaceBundle/getBundle()#org/ops4j/pax/wicket/internal/Activator/getBundleContext()
org/ops4j/pax/wicket/samples/blueprint/mount/internal/ManuallyPageMounter/getMountPoints()#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/samples/blueprint/mount/internal/ManuallyPageMounter/getMountPoints()#java/util/List/add(E)
org/ops4j/pax/wicket/samples/blueprint/mount/internal/ManuallyPageMounter/getMountPoints()#org/ops4j/pax/wicket/samples/blueprint/mount/internal/ManuallyPageMounter/getMountPoints()/$anonymous1/()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelperDecorator/start()#org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/register()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelperDecorator/start()#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelperDecorator/start()#org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/BundleInjectionProviderHelper(org.osgi.framework.BundleContext,java.lang.String,java.lang.String,org.osgi.util.tracker.ServiceTracker)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelperDecorator/start()#org/osgi/util/tracker/ServiceTracker/ServiceTracker(org.osgi.framework.BundleContext,java.lang.Class,org.osgi.util.tracker.ServiceTrackerCustomizer)
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelperDecorator/stop()#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelperDecorator/stop()#org/ops4j/pax/wicket/spi/support/BundleInjectionProviderHelper/dispose()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()#java/lang/Class/getSimpleName()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/support/DefaultPageMounter/dispose()#java/lang/Object/getClass()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/updated(java.util.Dictionary)#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/updated(java.util.Dictionary)#org/ops4j/pax/wicket/api/support/DefaultPageMounter/setApplicationName(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/updated(java.util.Dictionary)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()#java/lang/Class/getSimpleName()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()#org/osgi/framework/BundleContext/registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/register()#java/lang/Object/getClass()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/setApplicationName(java.lang.String)#java/util/Dictionary/put(K,V)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/setApplicationName(java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotEmpty(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/getApplicationName()#java/util/Dictionary/get(java.lang.Object)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/getMountPoints()#java/util/Collections/unmodifiableList(java.util.List)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)#org/ops4j/pax/wicket/api/support/DefaultPageMounter/DefaultMountPointInfo/DefaultMountPointInfo(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)#java/lang/Class/getName()
org/ops4j/pax/wicket/api/support/DefaultPageMounter/addMountPoint(java.lang.String,java.lang.Class)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/getTarget()#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/getTarget()#org/ops4j/pax/wicket/spi/ProxyTarget/getTarget()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/getTarget()#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/locateProxyTarget()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/getTarget()#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/releaseTarget()#org/slf4j/Logger/trace(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/releaseTarget()#org/ops4j/pax/wicket/spi/ReleasableProxyTarget/releaseTarget()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/ReleasableProxyTargetImplementation/releaseTarget()#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/SpringFilterFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/getBeanClass(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/SpringFilterFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/SpringParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.springdm.injection.spring.AbstractSpringBeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/util/serialization/ReplaceBundleContext/getBundleContext()#org/ops4j/pax/wicket/internal/Activator/getBundleContextByBundleId(long)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/TraceSlot/toString()#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/filter/FilterDelegator/setServlet(javax.servlet.Servlet)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#org/osgi/util/tracker/ServiceTracker/getServices(T[])
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#java/lang/Throwable/getMessage()
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#java/util/List/add(E)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#java/util/Arrays/sort(java.lang.Object[])
org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)#org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFilter(javax.servlet.ServletConfig)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/stop()#org/osgi/util/tracker/ServiceTracker/close()
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/filter/PAXWicketFilterChain/PAXWicketFilterChain(java.util.List,javax.servlet.Servlet)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/Servlet/getServletConfig()
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/ops4j/pax/wicket/internal/filter/FilterDelegator/getFiltersSortedWithHighestPriorityAsFirstFilter(java.util.List,javax.servlet.ServletConfig)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/util/Arrays/asList(T[])
org/ops4j/pax/wicket/internal/filter/FilterDelegator/doFilter(javax.servlet.Filter[],javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/util/List/addAll(java.util.Collection)
org/ops4j/pax/wicket/internal/filter/FilterDelegator/start()#org/osgi/util/tracker/ServiceTracker/open()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/start()#org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/DefaultFilterFactory(org.osgi.framework.BundleContext,java.lang.Class,java.lang.Integer,java.lang.String,java.util.Map)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/start()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/register()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/getApplicationName()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getApplicationName()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/getPriority()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/getPriority()
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/DefaultFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)
org/ops4j/pax/wicket/spi/support/FilterFactoryDecorator/stop()#org/ops4j/pax/wicket/api/support/AbstractFilterFactory/dispose()
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintInjectionResolverDefinitionParser/BlueprintInjectionResolverDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintInjectionResolverDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintInjectionResolverDefinitionParser/BlueprintInjectionResolverDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/BlueprintParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.blueprint.injection.blueprint.AbstractBlueprintBeanDefinitionParser)
org/ops4j/pax/wicket/spi/blueprint/BlueprintInjectionResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveClass(java.io.ObjectStreamClass)#java/io/ObjectInputStream/resolveClass(java.io.ObjectStreamClass)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveClass(java.io.ObjectStreamClass)#java/io/ObjectStreamClass/getName()
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveClass(java.io.ObjectStreamClass)#org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveClassByClassResolver(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveClassByClassResolver(java.lang.String)#org/apache/wicket/application/IClassResolver/resolveClass(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveObject(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/ReplaceBundleContext/getBundleContext()
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveObject(java.lang.Object)#java/io/ObjectInputStream/resolveObject(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectInputStream/resolveObject(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/ReplaceBundle/getBundle()
org/ops4j/pax/wicket/test/spring/SimplifiedPaxWicketInjector/registerBean(java.lang.String,java.lang.Object)#org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/test/spring/SimplifiedPaxWicketInjector/registerBeanInjector(org.apache.wicket.util.tester.WicketTester)#org/ops4j/pax/wicket/test/spring/SimplifiedPaxWicketInjector/SimplifiedPaxWicketInjector(org.apache.wicket.util.tester.WicketTester)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/getApplicationContextFilter(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/getApplicationContextFilter(java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/getBeanName()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#java/util/Map/size()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#java/lang/String/isEmpty()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/createStrategy()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/BlueprintBeanReactor/BlueprintBeanReactor(java.lang.String)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setApplicationName(java.lang.String[])#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setApplicationName(java.lang.String[])#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setApplicationName(java.lang.String[])#java/util/Hashtable/remove(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/dispose()#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/getServicePid()#java/util/Hashtable/get(java.lang.Object)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/register()#org/osgi/framework/BundleContext/registerService(java.lang.String[],java.lang.Object,java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/register()#org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/BundleClassResolver/BundleClassResolver()
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setServicePid(java.lang.String)#org/osgi/framework/ServiceRegistration/setProperties(java.util.Dictionary)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setServicePid(java.lang.String)#java/util/Hashtable/put(K,V)
org/ops4j/pax/wicket/spi/support/BundleClassResolverHelper/setServicePid(java.lang.String)#java/util/Hashtable/remove(java.lang.Object)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/getBeanType(java.lang.reflect.Field)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getBeanType(java.lang.reflect.Field)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/countComponentContainPaxWicketBeanAnnotatedFieldsHierachical(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/getFields(java.lang.Class)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/getFields(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/AbstractPaxWicketInjectorTest/PaxWicketTestInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)#org/ops4j/pax/wicket/spi/support/AbstractPaxWicketInjector/setField(java.lang.Object,java.lang.reflect.Field,java.lang.Object)
org/ops4j/pax/wicket/samples/blueprint/mount/internal/WicketApplication/init()#org/apache/wicket/protocol/http/WebApplication/mountPage(java.lang.String,java.lang.Class)
org/ops4j/pax/wicket/samples/blueprint/mount/internal/WicketApplication/init()#org/apache/wicket/protocol/http/WebApplication/init()
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableComponentMetadata/setActivation(int)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setRuntimeClass(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setDestroyMethod(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setScope(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableBeanMetadata/setInitMethod(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyBaseFunctionality()#org/apache/aries/blueprint/mutable/MutableRefMetadata/setComponentId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)#org/apache/aries/blueprint/mutable/MutableValueMetadata/setStringValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/apache/aries/blueprint/mutable/MutableValueMetadata/setStringValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/apache/aries/blueprint/mutable/MutableMapMetadata/addEntry(org.osgi.service.blueprint.reflect.NonNullMetadata,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/mockito/Mockito/times(int)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyListValue(java.lang.String,java.lang.String[])#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/mockito/Mockito/verify(T,org.mockito.verification.VerificationMode)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/aries/blueprint/mutable/MutableValueMetadata/setStringValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/aries/blueprint/mutable/MutableMapMetadata/addEntry(org.osgi.service.blueprint.reflect.NonNullMetadata,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/mockito/Mockito/times(int)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyReference(java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyReference(java.lang.String)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyReference(java.lang.String)#org/apache/aries/blueprint/mutable/MutableRefMetadata/setComponentId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyId(java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyId(java.lang.String)#org/apache/aries/blueprint/mutable/MutableComponentMetadata/setId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)#org/apache/aries/blueprint/mutable/MutableValueMetadata/setStringValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)#org/mockito/Mockito/verify(T)
org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/addingService(org.osgi.framework.ServiceReference)#java/util/List/add(E)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/addingService(org.osgi.framework.ServiceReference)#org/osgi/util/tracker/ServiceTracker/addingService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#java/lang/Class/isArray()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#java/lang/Object/getClass()
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#org/osgi/util/tracker/ServiceTracker/removedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/spi/support/DelegatingComponentInstanciationListener/ComponentInstanciationListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PaxWicketInjector)#java/util/List/remove(java.lang.Object)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class,boolean,boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanDefinitionCount()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getParent()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/publishEvent(org.springframework.context.ApplicationEvent)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/isTypeMatch(java.lang.String,java.lang.Class)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/containsBeanDefinition(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansWithAnnotation(java.lang.Class)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.Object)#org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.Object)#java/lang/Class/getName()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.Object)#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getMessage(java.lang.String,java.lang.Object[],java.util.Locale)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getId()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getAutowireCapableBeanFactory()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getClassLoader()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getStartupDate()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.String,java.lang.Object)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getResource(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getDisplayName()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/findAnnotationOnBean(java.lang.String,java.lang.Class)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getMessage(org.springframework.context.MessageSourceResolvable,java.util.Locale)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String,java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String,java.lang.Class)#org/springframework/beans/factory/BeanNotOfRequiredTypeException/BeanNotOfRequiredTypeException(java.lang.String,java.lang.Class,java.lang.Class)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String,java.lang.Class)#org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String,java.lang.Class)#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getAliases(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getType(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.Class)#java/util/Map/Entry/getValue()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.Class)#java/util/Map/entrySet()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getMessage(java.lang.String,java.lang.Object[],java.lang.String,java.util.Locale)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Map/Entry/getValue()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Map/Entry/getKey()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Set/iterator()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Map/entrySet()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/Iterator/next()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class)#java/util/HashMap/HashMap()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/containsBean(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getResources(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/isPrototype(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/ArrayList/ArrayList()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/Map/Entry/getValue()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/Iterator/hasNext()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/ArrayList/toArray(T[])
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/Iterator/next()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/Set/iterator()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/lang/Object/getClass()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/ArrayList/add(E)
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/Map/entrySet()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/ArrayList/size()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanNamesForType(java.lang.Class)#java/util/Map/Entry/getKey()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBean(java.lang.String,java.lang.Object[])#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeansOfType(java.lang.Class,boolean,boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/containsLocalBean(java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/test/spring/ApplicationContextMock/getBeanDefinitionNames()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/OSGiAwareOutputStream/replaceObject(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/ReplaceBundle/ReplaceBundle(org.osgi.framework.Bundle)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/OSGiAwareOutputStream/replaceObject(java.lang.Object)#java/io/ObjectOutputStream/replaceObject(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketObjectOutputStream/OSGiAwareOutputStream/replaceObject(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/ReplaceBundleContext/ReplaceBundleContext(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilder/parse(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadXml(java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/setNamespaceAware(boolean)
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)#org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadXml(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)#org/w3c/dom/NodeList/item(int)
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintClassResolverDefinitionParser/BlueprintClassResolverDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/BlueprintParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.blueprint.injection.blueprint.AbstractBlueprintBeanDefinitionParser)
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintClassResolverDefinitionParser/BlueprintClassResolverDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/blueprint/BlueprintClassResolverDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintClassResolverDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/support/ApplicationDecorator/start()#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/DefaultWebApplicationFactory(org.osgi.framework.BundleContext,java.lang.Class,java.lang.String,java.lang.String,java.util.Map)
org/ops4j/pax/wicket/spi/support/ApplicationDecorator/start()#org/slf4j/Logger/info(java.lang.String)
org/ops4j/pax/wicket/spi/support/ApplicationDecorator/start()#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/register()
org/ops4j/pax/wicket/spi/support/ApplicationDecorator/stop()#org/slf4j/Logger/info(java.lang.String)
org/ops4j/pax/wicket/spi/support/ApplicationDecorator/stop()#org/ops4j/pax/wicket/api/support/DefaultWebApplicationFactory/dispose()
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacade/onInstantiation(org.apache.wicket.Component)#org/ops4j/pax/wicket/api/PaxWicketInjector/inject(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/internal/injection/ComponentInstantiationListenerFacade/onInstantiation(org.apache.wicket.Component)#java/lang/Object/getClass()
org/ops4j/pax/wicket/samples/blueprint/applicationFactory/internal/WicketApplication/get()#org/apache/wicket/protocol/http/WebApplication/get()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/osgi/framework/Bundle/loadClass(java.lang.String)
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#java/lang/Class/getConstructor(java.lang.Class<?>[])
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/osgi/framework/Bundle/getState()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getPaxWicketServiceBundle(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#java/lang/Object/getClass()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/junit/Assert/assertNotNull(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#java/lang/Class/getMethod(java.lang.String,java.lang.Class<?>[])
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/junit/Assert/assertEquals(long,long)
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/osgi/util/tracker/ServiceTracker/ServiceTracker(org.osgi.framework.BundleContext,java.lang.Class,org.osgi.util.tracker.ServiceTrackerCustomizer)
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/testStopping()#org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/PageClassDummy/PageClassDummy()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/mavenBundle()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/provision(org.ops4j.pax.exam.options.ProvisionOption<?>[])
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/exam/OptionUtils/combine(org.ops4j.pax.exam.Option[],org.ops4j.pax.exam.Option[])
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/groupId(java.lang.String)
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/versionAsInProject()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()
org/ops4j/pax/wicket/it/injection/InjectSpecialBeanTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/artifactId(java.lang.String)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/apache/wicket/Application/getComponentInstantiationListeners()
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/ops4j/pax/wicket/test/ExamplePage/TestInjectionBean/TestInjectionBean(java.lang.String)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/apache/wicket/util/listener/ListenerCollection/add(T)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/apache/wicket/util/tester/BaseWicketTester/getApplication()
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/apache/wicket/util/tester/BaseWicketTester/startPage(java.lang.Class)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/ops4j/pax/wicket/test/spring/ApplicationContextMock/putBean(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/apache/wicket/util/tester/WicketTester/assertLabel(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/ops4j/pax/wicket/test/spring/PaxWicketSpringBeanComponentInjector/PaxWicketSpringBeanComponentInjector(org.apache.wicket.protocol.http.WebApplication,org.springframework.context.ApplicationContext)
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/ops4j/pax/wicket/test/spring/ApplicationContextMock/ApplicationContextMock()
org/ops4j/pax/wicket/test/spring/PaxWicketBeanInjectionTest/testStartPage_shouldShowMockingContent()#org/apache/wicket/util/tester/WicketTester/WicketTester()
org/ops4j/pax/wicket/spi/blueprint/BlueprintTestUtil/loadSpringXml()#org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadXml(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintTestUtil/loadFirstElementThatMatches(java.lang.String)#org/ops4j/pax/wicket/spi/blueprint/XmlFileTestUtil/loadFirstElementThatMatches(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)#org/ops4j/pax/wicket/api/PaxWicketBeanFilter/value()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)#java/lang/String/isEmpty()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createIterable(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)#org/osgi/framework/Filter/toString()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createIterable(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterable(java.lang.Class,java.lang.String,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/Class/getClassLoader()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/fetchReferences()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/osgi/framework/BundleReference/getBundle()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/BundleAnalysingComponentInstantiationListener/getGenericTypeArgument(java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/Object/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/osgi/framework/Bundle/getBundleContext()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createIterable(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/StaticProxyTargetLocator/StaticProxyTargetLocator(java.lang.Object,java.lang.Class)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/OSGiServiceRegistryProxyTargetLocator(org.osgi.framework.BundleContext,org.osgi.framework.Filter,java.lang.Class,java.lang.Class)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createCollection(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createCollection(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createIterable(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createCollection(java.lang.Class,org.osgi.framework.Filter,org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceCollection/ServiceReferenceCollection(org.ops4j.pax.wicket.internal.injection.registry.ServiceReferenceIterable)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createFutureProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/getFilter(org.osgi.framework.BundleContext,java.lang.reflect.Field)
org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocatorFactory/createFutureProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/internal/injection/registry/OSGiServiceRegistryProxyTargetLocator/OSGiServiceRegistryProxyTargetLocator(org.osgi.framework.BundleContext,org.osgi.framework.Filter,java.lang.Class,java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintInjectionResolverDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintInjectionResolverDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintInjectionResolverDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/keys()#org/ops4j/pax/wicket/internal/util/MapAsDictionary/IteratorToEnumeration/IteratorToEnumeration(java.util.Iterator)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/keys()#java/util/Map/keySet()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/keys()#java/util/Set/iterator()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/put(java.lang.Object,java.lang.Object)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/size()#java/util/Map/size()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/toString()#java/lang/Object/toString()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/remove(java.lang.Object)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/elements()#org/ops4j/pax/wicket/internal/util/MapAsDictionary/IteratorToEnumeration/IteratorToEnumeration(java.util.Iterator)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/elements()#java/util/Map/values()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/elements()#java/util/Collection/iterator()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/get(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/util/MapAsDictionary/isEmpty()#java/util/Map/isEmpty()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/wrap(java.util.Map)#org/ops4j/pax/wicket/internal/util/DictionaryAsMap/getDictionary()
org/ops4j/pax/wicket/internal/util/MapAsDictionary/wrap(java.util.Map)#org/ops4j/pax/wicket/internal/util/MapAsDictionary/MapAsDictionary(java.util.Map)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/SessionDestroyedHander/addListener(org.ops4j.pax.wicket.api.SessionDestroyedListener)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/addingService(org.osgi.framework.ServiceReference)#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.SessionDestroyedListener)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.SessionDestroyedListener)#org/ops4j/pax/wicket/internal/SessionDestroyedHander/removeListener(org.ops4j.pax.wicket.api.SessionDestroyedListener)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.SessionDestroyedListener)#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/SessionDestroyedListenerTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.SessionDestroyedListener)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/api/support/DefaultPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#java/lang/Class/newInstance()
org/ops4j/pax/wicket/api/support/DefaultPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#java/lang/reflect/UndeclaredThrowableException/UndeclaredThrowableException(java.lang.Throwable)
org/ops4j/pax/wicket/samples/mixed/component/internal/Activator/start(org.osgi.framework.BundleContext)#org/ops4j/pax/wicket/samples/mixed/component/internal/MyPanelProvider/MyPanelProvider()
org/ops4j/pax/wicket/samples/mixed/component/internal/Activator/start(org.osgi.framework.BundleContext)#java/lang/Class/getName()
org/ops4j/pax/wicket/samples/mixed/component/internal/Activator/start(org.osgi.framework.BundleContext)#org/osgi/framework/BundleContext/registerService(java.lang.String,java.lang.Object,java.util.Dictionary)
org/ops4j/pax/wicket/samples/mixed/component/internal/Activator/stop(org.osgi.framework.BundleContext)#org/osgi/framework/ServiceRegistration/unregister()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringDMProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringDMProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#javax/inject/Named/value()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringDMProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringDMProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringBeanProxyTargetLocator/SpringBeanProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.String,java.lang.Class,java.lang.Class,java.util.Map)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringDMProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/internal/GenericContext/handleSecurity(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/handleSecurity(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)#java/lang/String/length()
org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)#java/lang/String/substring(int)
org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)#org/osgi/framework/Bundle/getResource(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/normalizeMountPoint(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/getMimeType(java.lang.String)#java/net/URL/toString()
org/ops4j/pax/wicket/internal/GenericContext/getMimeType(java.lang.String)#org/ops4j/pax/wicket/internal/GenericContext/getResource(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/getMimeType(java.lang.String)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/internal/GenericContext/getMimeType(java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/GenericContext/getMimeType(java.lang.String)#javax/activation/MimetypesFileTypeMap/getContentType(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintClassResolverDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#org/ops4j/pax/wicket/spi/ProxyTarget/getTarget()
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#org/ops4j/pax/wicket/spi/FutureProxyTargetLocator/locateProxyTarget(long,java.util.concurrent.TimeUnit)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#java/lang/Class/cast(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#org/slf4j/Logger/trace(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#java/util/concurrent/TimeoutException/TimeoutException(java.lang.String)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#org/ops4j/pax/wicket/spi/ReleasableProxyTarget/releaseTarget()
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get(long,java.util.concurrent.TimeUnit)#org/ops4j/pax/wicket/internal/injection/InjectionFuture/get()
org/ops4j/pax/wicket/internal/injection/InjectionFuture/cancel(boolean)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/ops4j/pax/wicket/internal/injection/InjectionFuture/create(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)#org/ops4j/pax/wicket/internal/injection/InjectionFuture/InjectionFuture(java.lang.Class,org.ops4j.pax.wicket.spi.ProxyTargetLocator)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get()#org/ops4j/pax/wicket/spi/ProxyTargetLocator/locateProxyTarget()
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get()#org/ops4j/pax/wicket/spi/ProxyTarget/getTarget()
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get()#java/lang/Class/cast(java.lang.Object)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get()#org/slf4j/Logger/trace(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/InjectionFuture/get()#org/ops4j/pax/wicket/spi/ReleasableProxyTarget/releaseTarget()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringFilterFactoryBeanDefinitionParser/SpringFilterFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParser/SpringAutoPageMounterDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/springframework/beans/factory/xml/NamespaceHandlerSupport/registerBeanDefinitionParser(java.lang.String,org.springframework.beans.factory.xml.BeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringPageFactoryBeanDefinitionParser/SpringPageFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringInjectionResolverDefinitionParser/SpringInjectionResolverDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringClassResolverDefinitionParser/SpringClassResolverDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringNamespaceHandler/init()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringApplicationBeanDefinitionParser/SpringApplicationBeanDefinitionParser()
org/ops4j/pax/wicket/internal/Initializer/destroy(org.apache.wicket.Application)#org/apache/wicket/IInitializer/destroy(org.apache.wicket.Application)
org/ops4j/pax/wicket/internal/Initializer/init(org.apache.wicket.Application)#org/apache/wicket/IInitializer/init(org.apache.wicket.Application)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/iterator()#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/fetchReferences()
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/iterator()#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/ServiceReferenceIterator/ServiceReferenceIterator(java.util.Iterator,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/iterator()#java/util/Collection/iterator()
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/fetchReferences()#org/osgi/framework/BundleContext/getServiceReferences(java.lang.Class,java.lang.String)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/fetchReferences()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/getCurrentSize()#org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/fetchReferences()
org/ops4j/pax/wicket/internal/injection/registry/ServiceReferenceIterable/getCurrentSize()#java/util/Collection/size()
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyId(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/BlueprintParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.blueprint.injection.blueprint.AbstractBlueprintBeanDefinitionParser)
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/BlueprintApplicationBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/BlueprintApplicationBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintApplicationBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/dispose()
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#org/osgi/framework/BundleContext/ungetService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/addingService(org.osgi.framework.ServiceReference)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/FilterFactoryReference(org.ops4j.pax.wicket.api.FilterFactory)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/addingService(org.osgi.framework.ServiceReference)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/addingService(org.osgi.framework.ServiceReference)#org/osgi/framework/BundleContext/getService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/addingService(org.osgi.framework.ServiceReference)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/createOsgiFilter()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/createOsgiFilter()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/createOsgiFilter()#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/createOsgiFilter()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/createOsgiFilter()#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/getFactory()
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#org/ops4j/pax/wicket/internal/filter/FilterFactoryReference/setProperties(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/filter/FilterTrackerCustomizer/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.internal.filter.FilterFactoryReference)#java/lang/Object/getClass()
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#org/slf4j/Logger/debug(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#org/osgi/util/tracker/ServiceTracker/removedService(org.osgi.framework.ServiceReference,T)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/remove(org.ops4j.pax.wicket.api.PageFactory)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#org/slf4j/Logger/isDebugEnabled()
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/remove(org.ops4j.pax.wicket.api.PageFactory)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.PageFactory)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/addingService(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/PaxWicketPageFactory/add(org.ops4j.pax.wicket.api.PageFactory)
org/ops4j/pax/wicket/internal/PaxWicketPageTracker/addingService(org.osgi.framework.ServiceReference)#org/osgi/util/tracker/ServiceTracker/addingService(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/samples/blueprint/filter/internal/SampleFilterFactory/createFilter(org.ops4j.pax.wicket.api.ConfigurableFilterConfig)#org/ops4j/pax/wicket/samples/blueprint/filter/internal/IAmASysoutFilter/IAmASysoutFilter()
org/ops4j/pax/wicket/internal/TrackingUtil/createAllPageFactoryFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/TrackingUtil/createAllPageFactoryFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createAllPageFactoryFilter(org.osgi.framework.BundleContext,java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotEmpty(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createAllPageFactoryFilter(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createAllPageFactoryFilter(org.osgi.framework.BundleContext,java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createApplicationFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/Class/getName()
org/ops4j/pax/wicket/internal/TrackingUtil/createApplicationFilter(org.osgi.framework.BundleContext,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createApplicationFilter(org.osgi.framework.BundleContext,java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotEmpty(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createApplicationFilter(org.osgi.framework.BundleContext,java.lang.String)#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtil/createApplicationFilter(org.osgi.framework.BundleContext,java.lang.String)#org/ops4j/lang/NullArgumentException/validateNotNull(java.lang.Object,java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/util/regex/Matcher/group(int)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/String/charAt(int)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/String/length()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/Throwable/getMessage()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/String/substring(int,int)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/util/regex/Matcher/find()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/loadCandidate(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/osgi/framework/Bundle/adapt(java.lang.Class)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/osgi/framework/wiring/BundleWiring/listResources(java.lang.String,java.lang.String,int)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/util/regex/Pattern/compile(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/util/Set/add(E)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/String/substring(int)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/lang/String/replace(char,char)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/util/HashSet/HashSet()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getAllClasses()#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingPAXWicketAPI()#org/osgi/framework/Bundle/adapt(java.lang.Class)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingPAXWicketAPI()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/hasWireMatchingFilter(java.util.List,java.util.Map)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingPAXWicketAPI()#org/osgi/framework/wiring/BundleWiring/getRequiredWires(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForMountPointAnnotations()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingPAXWicketAPI()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForMountPointAnnotations()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForMountPointAnnotations()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isWicket()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForImportEnhancements()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForImportEnhancements()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingPAXWicketAPI()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForImportEnhancements()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isRelevantForImportEnhancements()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isWicket()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getID()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getID()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isWicket()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isWicket()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isWicket()#java/lang/String/startsWith(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/loadCandidate(java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/loadCandidate(java.lang.String)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/loadCandidate(java.lang.String)#org/osgi/framework/Bundle/loadClass(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/createMapWithVersion(java.lang.String,java.lang.Object,org.osgi.framework.Version)#java/util/Collections/unmodifiableMap(java.util.Map)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/createMapWithVersion(java.lang.String,java.lang.Object,org.osgi.framework.Version)#java/util/HashMap/HashMap()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/createMapWithVersion(java.lang.String,java.lang.Object,org.osgi.framework.Version)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/BundleContext/getBundles()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/wiring/BundleRequirement/getDirectives()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/hasWireMatchingFilter(java.util.List,java.util.Map)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/wiring/BundleWire/getRequirement()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/Bundle/getVersion()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/wiring/BundleWiring/getRequiredWires(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/osgi/framework/Bundle/adapt(java.lang.Class)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/createMapWithVersion(java.lang.String,java.lang.Object,org.osgi.framework.Version)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#java/util/List/isEmpty()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#java/util/regex/Matcher/find()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isImportingWicket()#java/lang/String/startsWith(java.lang.String)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/hasWireMatchingFilter(java.util.List,java.util.Map)#org/osgi/framework/wiring/BundleRequirement/getDirectives()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/hasWireMatchingFilter(java.util.List,java.util.Map)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/hasWireMatchingFilter(java.util.List,java.util.Map)#org/osgi/framework/wiring/BundleWire/getRequirement()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/hasWireMatchingFilter(java.util.List,java.util.Map)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/ExtendedBundleContext/matchFilter(java.lang.String,java.util.Map)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()#org/osgi/framework/BundleContext/getBundle()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getBundle()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()#org/osgi/framework/Bundle/getSymbolicName()
org/ops4j/pax/wicket/internal/extender/ExtendedBundle/isPAXWicket()#org/ops4j/pax/wicket/internal/Activator/getBundleContext()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParser/SpringAutoPageMounterDefinitionParser()
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParser/getBeanClass(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testRequestBeanType_shouldReturnDefaultContentSourceFactory()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/SpringParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.springdm.injection.spring.AbstractSpringBeanDefinitionParser)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/springdm/injection/spring/SpringAutoPageMounterDefinitionParser/SpringAutoPageMounterDefinitionParser()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#net/sf/cglib/proxy/Enhancer/create()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#org/ops4j/pax/wicket/spi/support/ComponentProxy/ComponentProxy(java.lang.String,java.util.Map)
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#java/lang/Class/getName()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#net/sf/cglib/proxy/Enhancer/Enhancer()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#net/sf/cglib/proxy/Enhancer/create(java.lang.Class[],java.lang.Object[])
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#org/apache/wicket/request/mapper/parameter/PageParameters/isEmpty()
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#net/sf/cglib/proxy/Enhancer/setCallback(net.sf.cglib.proxy.Callback)
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/spi/support/PageFactoryDecorator/InternalPageFactory/createPage(org.apache.wicket.request.mapper.parameter.PageParameters)#net/sf/cglib/proxy/Enhancer/setSuperclass(java.lang.Class)
org/ops4j/pax/wicket/util/serialization/SerializationTest/SomeObject/hashCode()#java/lang/String/hashCode()
org/ops4j/pax/wicket/util/serialization/SerializationTest/SomeObject/hashCode()#java/lang/Long/hashCode()
org/ops4j/pax/wicket/util/serialization/SerializationTest/SomeObject/equals(java.lang.Object)#java/lang/Long/equals(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/SerializationTest/SomeObject/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/SerializationTest/SomeObject/equals(java.lang.Object)#java/lang/Object/getClass()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/createStringValue(org.apache.aries.blueprint.ParserContext,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/support/InjectionParserUtil/retrieveContextParam(org.w3c.dom.Element)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/w3c/dom/Element/getAttribute(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyValueFromElement(java.lang.String,org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#java/lang/String/isEmpty()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/apache/aries/blueprint/mutable/MutableBeanMetadata/addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintApplicationBeanDefinitionParser/extractRemainingMetaData(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/AbstractBlueprintBeanDefinitionParser/addPropertyReferenceForMap(java.lang.String,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.util.Map)
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintFilterFactoryBeanDefinitionParser/BlueprintFilterFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyMapValue(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/BlueprintParserTestUtil(java.lang.String,org.ops4j.pax.wicket.spi.blueprint.injection.blueprint.AbstractBlueprintBeanDefinitionParser)
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testParse()#org/ops4j/pax/wicket/spi/blueprint/BlueprintParserTestUtil/verifyPropertyValue(java.lang.String)
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintFilterFactoryBeanDefinitionParser/getRuntimeClass()
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/hamcrest/Matchers/typeCompatibleWith(java.lang.Class)
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintFilterFactoryBeanDefinitionParser/BlueprintFilterFactoryBeanDefinitionParser()
org/ops4j/pax/wicket/spi/blueprint/BlueprintFilterFactoryBeanDefinitionParserTest/testRequestRuntimeClass_shouldReturnApplicationDecorator()#org/junit/Assert/assertThat(T,org.hamcrest.Matcher)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/modifiedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/reevaluateAllBundles(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removedService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/addBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/BundleDelegatingClassResolver(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/start()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/start()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/BundleDelegatingComponentInstanciationListener(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTracker)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/osgi/framework/ServiceReference/getProperty(java.lang.String)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/BundleDelegatingPageMounter(java.lang.String,org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/start()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/stop()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/stop()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeServicesForServiceReference(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/stop()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeBundleFromAllServices(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getID()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/remove(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/keySet()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addRelevantBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/extender/ExtendedBundle/getID()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/reevaluateAllBundles(org.osgi.framework.ServiceReference)#java/util/Map/values()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/reevaluateAllBundles(org.osgi.framework.ServiceReference)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addBundleToServicesReference(org.ops4j.pax.wicket.internal.extender.ExtendedBundle,org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeBundleFromAllServices(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/BundleDelegatingPageMounter/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeBundleFromAllServices(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/injection/BundleDelegatingComponentInstanciationListener/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeBundleFromAllServices(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/keySet()
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeBundleFromAllServices(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#org/ops4j/pax/wicket/internal/BundleDelegatingClassResolver/removeBundle(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/removeBundleFromAllServices(org.ops4j.pax.wicket.internal.extender.ExtendedBundle)#java/util/Map/get(java.lang.Object)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addingService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addServicesForServiceReference(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/addingService(org.osgi.framework.ServiceReference,org.ops4j.pax.wicket.api.WebApplicationFactory)#org/ops4j/pax/wicket/internal/extender/BundleDelegatingExtensionTracker/reevaluateAllBundles(org.osgi.framework.ServiceReference)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/spi/support/AbstractProxyTargetLocator/hasApplicationContext()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#javax/inject/Named/value()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/reflect/Field/getType()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/String/isEmpty()
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintBeanProxyTargetLocator/BlueprintBeanProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.String,java.lang.Class,java.lang.Class,java.util.Map)
org/ops4j/pax/wicket/spi/blueprint/injection/blueprint/BlueprintProxyTargetLocatorFactory/createProxyTargetLocator(org.osgi.framework.BundleContext,java.lang.reflect.Field,java.lang.Class,java.util.Map)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/ops4j/pax/wicket/samples/ds/internal/WicketWebApplicationFactory/onInstantiation(org.ops4j.pax.wicket.samples.ds.internal.WicketApplication)#java/io/PrintStream/println(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/setup()#org/jmock/Mockery/Mockery()
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/one(T)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/osgi/framework/InvalidSyntaxException/InvalidSyntaxException(java.lang.String,java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Mockery/mock(java.lang.Class)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/Expectations()
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/any(java.lang.Class)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Mockery/checking(org.jmock.internal.ExpectationBuilder)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/returnValue(java.lang.Object)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/ops4j/pax/wicket/internal/TrackingUtil/createAllPageFactoryFilter(org.osgi.framework.BundleContext,java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/with(org.hamcrest.Matcher)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#java/lang/Throwable/printStackTrace()
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/throwException(java.lang.Throwable)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/junit/Assert/fail(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/jmock/Expectations/will(org.jmock.api.Action)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/osgi/framework/BundleContext/createFilter(java.lang.String)
org/ops4j/pax/wicket/internal/TrackingUtilTestCase/testCreateAllPageFactoryFilter()#org/junit/Assert/assertEquals(java.lang.Object,java.lang.Object)
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/testStopping()#org/junit/Assert/fail(java.lang.String)
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/testStopping()#org/osgi/framework/Bundle/getState()
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/testStopping()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/getPaxWicketServiceBundle(org.osgi.framework.BundleContext)
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/testStopping()#org/osgi/framework/Bundle/stop()
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/testStopping()#org/junit/Assert/assertEquals(long,long)
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/mavenBundle()
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/exam/CoreOptions/provision(org.ops4j.pax.exam.options.ProvisionOption<?>[])
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/exam/OptionUtils/combine(org.ops4j.pax.exam.Option[],org.ops4j.pax.exam.Option[])
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/groupId(java.lang.String)
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/versionAsInProject()
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/wicket/it/PaxWicketIntegrationTest/configureProvisions()
org/ops4j/pax/wicket/it/lifecycle/LifecycleTest/configureAdditionalProvision()#org/ops4j/pax/exam/options/MavenArtifactProvisionOption/artifactId(java.lang.String)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java/lang/Object)/InterceptingObjectOutputStream/replaceObject(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/check(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java/lang/Object)/InterceptingObjectOutputStream/replaceObject(java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java/lang/Object)/InterceptingObjectOutputStream/replaceObject(java.lang.Object)#java/util/Map/put(K,V)
org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/internalCheck(java/lang/Object)/InterceptingObjectOutputStream/replaceObject(java.lang.Object)#org/ops4j/pax/wicket/util/serialization/PaxWicketSerializableChecker/additionalObjectReplacements(java.lang.Object)
