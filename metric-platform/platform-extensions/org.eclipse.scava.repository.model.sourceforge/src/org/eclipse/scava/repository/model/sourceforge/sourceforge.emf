package org.eclipse.scava.repository.model.sourceforge;


@stub(javaClass="org.eclipse.scava.repository.model.Project")
class Project {
}

@stub(javaClass="org.eclipse.scava.repository.model.BugTrackingSystem")
class BugTrackingSystem {
}

@stub(javaClass="org.eclipse.scava.repository.model.Person")
class Person {
}

@stub(javaClass="org.eclipse.scava.repository.model.NamedElement")
class NamedElement {
}

@stub(javaClass="org.eclipse.scava.repository.model.CommunicationChannel")
class CommunicationChannel {
}

class SourceForgeProject extends Project {
  attr String created;
  attr int projectId;
  attr int private;
  attr String shortDesc;
  attr float percentile;
  attr int ranking;
  attr String downloadPage;
  attr String supportPage;
  attr String summary;
  val MailingList mailingList;
  val OS[*] os;
  val Topic[*] topics;
  val ProgrammingLanguage[*] programminLanguages;
  val Audience[*] audiences;
  val Environment[*] environments;
  val Category[*] categories;
  val FeatureRequest[*] featureRequests;
  val SupportRequest[*] supportRequests;
  val Patch[*] patches;
  val SourceForgeBugTrackingSystem[*] bts;
  val Donation donation;
  val Discussion[*] discussion;
  val Bug[*] bugs;
  attr String downloadCount;
}

class MailingList extends CommunicationChannel{
	
}

class Discussion extends CommunicationChannel {
}

class OS extends NamedElement {
}

class Topic extends NamedElement {
}

class ProgrammingLanguage extends NamedElement {
}

class Audience extends NamedElement {
}

class Environment extends NamedElement {
}

class Category extends NamedElement {
}

class Donation {
  attr String comment;
  attr String status;
  attr String[*] charities;
}

//enum DonationStatus {
//  notAccepting = 1;
//  accepting = 2;
//}

//enum TrackerStatus {
//  open = 1;
// closed = 2;
//}

abstract class Tracker extends NamedElement {
  attr String location;
  attr String status;
}

@customize
class SourceForgeBugTrackingSystem extends BugTrackingSystem {
  val BugTS[*] bugsTS;
}

class BugTS extends Tracker {

  @key
  attr String description;
  val Person assignee;
  val Person submitted;
  attr int priority;
  attr String resolutionStatus;
  attr String bugVisibility;
}

//enum BugVisibility {
//  public = 1;
//  private = 2;
//}

//enum ResolutionStatus {
//  none = 1;
//  fixed = 2;
//}

abstract class Request extends Tracker {
  attr String summary;
  attr String created_at;
  attr String updated_at;
  val Person creator;
}

class FeatureRequest extends Request {
}

class SupportRequest extends Request {
}

class Patch extends Tracker {
}

class Bug extends Tracker {
}
